{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Environment/Utilities.js","src/Environment/Element.js","src/Environment/Node.js","src/CustomElementInternals.js","src/Utilities.js","src/CustomElementState.js","src/Environment/Document.js","src/Environment/MutationObserver.js","src/Environment/MutationRecord.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Environment/HTMLElement.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Environment/HTMLTemplateElement.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","getDescriptor$$module$$src$Environment$Utilities","o","p","Object","getOwnPropertyDescriptor","getter$$module$$src$Environment$Utilities","descriptor","fallback","get","method$$module$$src$Environment$Utilities","value","undefined","prototype","window","constructor","after","getDescriptor","append","attachShadow","before","innerHTML","insertAdjacentElement","prepend","remove","replaceWith","attachShadowMethod","method","descriptors$$module$$src$Environment$Element.attachShadow","getAttributeMethod","getAttribute","getAttributeNSMethod","getAttributeNS","localNameGetter","getter","localName","removeAttributeMethod","removeAttribute","removeAttributeNSMethod","removeAttributeNS","setAttributeMethod","setAttribute","setAttributeNSMethod","setAttributeNS","textContent","addEventListenerMethod","addEventListener","appendChildMethod","appendChild","childNodesGetter","childNodes","cloneNodeMethod","cloneNode","firstChildGetter","firstChild","insertBeforeMethod","insertBefore","isConnectedGetter","isConnected","nextSiblingGetter","nextSibling","nodeTypeGetter","nodeType","parentNodeGetter","parentNode","removeChildMethod","removeChild","replaceChildMethod","replaceChild","node","callback","call","type","options","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","nativeValue","current","__CE_isImportDocument","Document","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","visitedImports","Node","ELEMENT_NODE","element","name","importNode","import","add","child","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","patch","__CE_patched","i","length","connectTree","elements","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","gatherElements","readyState","__CE_hasRegistry","proxy$$module$$src$Environment$Node.addEventListener","__CE_documentLoadHandled","delete","localNameToDefinition","constructionStack","result","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","oldValue","newValue","namespace","indexOf","createElementMethod","createElement","createElementNSMethod","createElementNS","createTextNodeMethod","createTextNode","importNodeMethod","readyStateGetter","disconnectMethod","disconnect","observeMethod","observe","addedNodesGetter","addedNodes","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","_handleMutations","bind","childList","subtree","mutations","j","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_unflushedLocalNames","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","_flush","shift","deferred","whenDefined","reject","prior","polyfillWrapFlushCallback","outer","inner","flush","module$$src$Environment$HTMLElement","$jscompDefaultExport$$module$$src$Patch$HTMLElement","HTMLElement","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","apply","Element","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","NS_HTML","descriptors$$module$$src$Environment$Document.prepend","descriptors$$module$$src$Environment$Document.append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","nodeWasConnected","ownerDocument","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","descriptors$$module$$src$Environment$Node.textContent","descriptors$$module$$src$Environment$Node.textContent.get","parts","join","contentGetter","content","descriptors","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","descriptors$$module$$src$Environment$Element.before","descriptors$$module$$src$Environment$Element.after","descriptors$$module$$src$Environment$Element.replaceWith","descriptors$$module$$src$Environment$Element.remove","wasConnected","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","init","console","warn","descriptors$$module$$src$Environment$Element.innerHTML","descriptors$$module$$src$Environment$Element.innerHTML.get","descriptors$$module$$src$Environment$HTMLElement.innerHTML","descriptors$$module$$src$Environment$HTMLElement.innerHTML.get","rawDiv","descriptors$$module$$src$Environment$HTMLElement.insertAdjacentElement","descriptors$$module$$src$Environment$HTMLElement.insertAdjacentElement.value","descriptors$$module$$src$Environment$Element.insertAdjacentElement","descriptors$$module$$src$Environment$Element.insertAdjacentElement.value","descriptors$$module$$src$Environment$Element.prepend","descriptors$$module$$src$Environment$Element.append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","export const getDescriptor = (o, p) => Object.getOwnPropertyDescriptor(o, p);\nexport const getter = (descriptor, fallback) => descriptor && descriptor.get ? descriptor.get : fallback;\nexport const method = descriptor => descriptor ? descriptor.value : () => undefined;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Element'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  after: getDescriptor(prototype, 'after'),\n  append: getDescriptor(prototype, 'append'),\n  attachShadow: getDescriptor(prototype, 'attachShadow'),\n  before: getDescriptor(prototype, 'before'),\n  getAttribute: getDescriptor(prototype, 'getAttribute'),\n  getAttributeNS: getDescriptor(prototype, 'getAttributeNS'),\n  innerHTML: getDescriptor(prototype, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(prototype, 'insertAdjacentElement'),\n  localName: getDescriptor(prototype, 'localName'),\n  prepend: getDescriptor(prototype, 'prepend'),\n  remove: getDescriptor(prototype, 'remove'),\n  removeAttribute: getDescriptor(prototype, 'removeAttribute'),\n  removeAttributeNS: getDescriptor(prototype, 'removeAttributeNS'),\n  replaceWith: getDescriptor(prototype, 'replaceWith'),\n  setAttribute: getDescriptor(prototype, 'setAttribute'),\n  setAttributeNS: getDescriptor(prototype, 'setAttributeNS'),\n};\n\nconst attachShadowMethod = method(descriptors.attachShadow);\nconst getAttributeMethod = method(descriptors.getAttribute);\nconst getAttributeNSMethod = method(descriptors.getAttributeNS);\nconst localNameGetter = getter(descriptors.localName, function() { return this.localName; });\nconst removeAttributeMethod = method(descriptors.removeAttribute);\nconst removeAttributeNSMethod = method(descriptors.removeAttributeNS);\nconst setAttributeMethod = method(descriptors.setAttribute);\nconst setAttributeNSMethod = method(descriptors.setAttributeNS);\n\nexport const proxy = {\n  attachShadow: (node, options) => attachShadowMethod.call(node, options),\n  getAttribute: (node, name) => getAttributeMethod.call(node, name),\n  getAttributeNS: (node, ns, name) => getAttributeNSMethod.call(node, ns, name),\n  localName: node => localNameGetter.call(node),\n  removeAttribute: (node, name) => removeAttributeMethod.call(node, name),\n  removeAttributeNS: (node, ns, name) => removeAttributeNSMethod.call(node, ns, name),\n  setAttribute: (node, name, value) => setAttributeMethod.call(node, name, value),\n  setAttributeNS: (node, ns, name, value) => setAttributeNSMethod.call(node, ns, name, value),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Node'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  addEventListener: getDescriptor(prototype, 'addEventListener'),\n  appendChild: getDescriptor(prototype, 'appendChild'),\n  childNodes: getDescriptor(prototype, 'childNodes'),\n  cloneNode: getDescriptor(prototype, 'cloneNode'),\n  firstChild: getDescriptor(prototype, 'firstChild'),\n  insertBefore: getDescriptor(prototype, 'insertBefore'),\n  isConnected: getDescriptor(prototype, 'isConnected'),\n  nextSibling: getDescriptor(prototype, 'nextSibling'),\n  nodeType: getDescriptor(prototype, 'nodeType'),\n  parentNode: getDescriptor(prototype, 'parentNode'),\n  removeChild: getDescriptor(prototype, 'removeChild'),\n  replaceChild: getDescriptor(prototype, 'replaceChild'),\n  textContent: getDescriptor(prototype, 'textContent'),\n};\n\nconst addEventListenerMethod = method(descriptors.addEventListener);\nconst appendChildMethod = method(descriptors.appendChild);\nconst childNodesGetter = getter(descriptors.childNodes, function() { return this.childNodes; });\nconst cloneNodeMethod = method(descriptors.cloneNode);\nconst firstChildGetter = getter(descriptors.firstChild, function() { return this.firstChild; });\nconst insertBeforeMethod = method(descriptors.insertBefore);\nconst isConnectedGetter = getter(descriptors.isConnected, function() { return this.isConnected; });\nconst nextSiblingGetter = getter(descriptors.nextSibling, function() { return this.nextSibling; });\nconst nodeTypeGetter = getter(descriptors.nodeType, function() { return this.nodeType; });\nconst parentNodeGetter = getter(descriptors.parentNode, function() { return this.parentNode; });\nconst removeChildMethod = method(descriptors.removeChild);\nconst replaceChildMethod = method(descriptors.replaceChild);\n\nexport const proxy = {\n  addEventListener: (node, type, callback, options) => addEventListenerMethod.call(node, type, callback, options),\n  appendChild: (node, deep) => appendChildMethod.call(node, deep),\n  childNodes: node => childNodesGetter.call(node),\n  cloneNode: (node, deep) => cloneNodeMethod.call(node, deep),\n  firstChild: node => firstChildGetter.call(node),\n  insertBefore: (node, newChild, refChild) => insertBeforeMethod.call(node, newChild, refChild),\n  isConnected: node => isConnectedGetter.call(node),\n  nextSibling: node => nextSiblingGetter.call(node),\n  nodeType: node => nodeTypeGetter.call(node),\n  parentNode: node => parentNodeGetter.call(node),\n  removeChild: (node, deep) => removeChildMethod.call(node, deep),\n  replaceChild: (node, newChild, oldChild) => replaceChildMethod.call(node, newChild, oldChild),\n};\n","import {proxy as ElementProxy} from './Environment/Element.js';\nimport {proxy as NodeProxy} from './Environment/Node.js';\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const elements = [];\n\n    const gatherElements = element => {\n      if (ElementProxy.localName(element) === 'link' &&\n          ElementProxy.getAttribute(element, 'rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          NodeProxy.addEventListener(element, 'load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      this.upgradeElement(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = ElementProxy.getAttribute(element, name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import {proxy as ElementProxy} from './Environment/Element.js';\nimport {proxy as NodeProxy} from './Environment/Node.js';\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = NodeProxy.isConnected(node);\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = NodeProxy.parentNode(current) || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !NodeProxy.nextSibling(node)) {\n    node = NodeProxy.parentNode(node);\n  }\n  return (!node || node === root) ? null : NodeProxy.nextSibling(node);\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return NodeProxy.firstChild(start) || nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (NodeProxy.nodeType(node) === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = ElementProxy.localName(element);\n      if (localName === 'link' && ElementProxy.getAttribute(element, 'rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = NodeProxy.firstChild(importNode); child; child = NodeProxy.nextSibling(child)) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = NodeProxy.firstChild(shadowRoot); child; child = NodeProxy.nextSibling(child)) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Document'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  append: getDescriptor(prototype, 'append'),\n  createElement: getDescriptor(prototype, 'createElement'),\n  createElementNS: getDescriptor(prototype, 'createElementNS'),\n  createTextNode: getDescriptor(prototype, 'createTextNode'),\n  importNode: getDescriptor(prototype, 'importNode'),\n  prepend: getDescriptor(prototype, 'prepend'),\n  readyState: getDescriptor(prototype, 'readyState'),\n};\n\nconst createElementMethod = method(descriptors.createElement);\nconst createElementNSMethod = method(descriptors.createElementNS);\nconst createTextNodeMethod = method(descriptors.createTextNode);\nconst importNodeMethod = method(descriptors.importNode);\nconst readyStateGetter = getter(descriptors.readyState, function() { return this.readyState; });\n\nexport const proxy = {\n  createElement: (doc, localName) => createElementMethod.call(doc, localName),\n  createElementNS: (doc, namespace, qualifiedName) => createElementNSMethod.call(doc, namespace, qualifiedName),\n  createTextNode: (doc, localName) => createTextNodeMethod.call(doc, localName),\n  importNode: (doc, node, deep) => importNodeMethod.call(doc, node, deep),\n  readyState: doc => readyStateGetter.call(doc),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['MutationObserver'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  disconnect: getDescriptor(prototype, 'disconnect'),\n  observe: getDescriptor(prototype, 'observe'),\n};\n\nconst disconnectMethod = method(descriptors.disconnect);\nconst observeMethod = method(descriptors.observe);\n\nexport const proxy = {\n  disconnect: mutationObserver => disconnectMethod.call(mutationObserver),\n  observe: (mutationObserver, target, options) => observeMethod.call(mutationObserver, target, options),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['MutationRecord'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  addedNodes: getDescriptor(prototype, 'addedNodes'),\n};\n\nconst addedNodesGetter = getter(descriptors.addedNodes, function() { return this.addedNodes; });\n\nexport const proxy = {\n  addedNodes: node => addedNodesGetter.call(node),\n};\n","import {proxy as DocumentProxy} from './Environment/Document.js';\nimport {constructor as MutationObserverCtor, proxy as MutationObserverProxy} from './Environment/MutationObserver.js';\nimport {proxy as MutationRecordProxy} from './Environment/MutationRecord.js';\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (DocumentProxy.readyState(this._document) === 'loading') {\n      this._observer = new MutationObserverCtor(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      MutationObserverProxy.observe(this._observer, this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      MutationObserverProxy.disconnect(this._observer);\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = DocumentProxy.readyState(this._document);\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = MutationRecordProxy.addedNodes(mutations[i]);\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    this._unflushedLocalNames.push(localName);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n\n    this._flushPending = false;\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._unflushedLocalNames.length > 0) {\n      const localName = this._unflushedLocalNames.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLElement'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  innerHTML: getDescriptor(prototype, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(prototype, 'insertAdjacentElement'),\n};\n\nexport const proxy = {};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {prototype as HTMLElementProto} from '../Environment/HTMLElement.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = DocumentProxy.createElement(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = HTMLElementProto;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import {descriptors as DocumentDesc, proxy as DocumentProxy} from '../Environment/Document.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (DocumentProxy.createElement(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = DocumentProxy.importNode(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (DocumentProxy.createElementNS(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: (DocumentDesc.prepend || {}).value,\n    append: (DocumentDesc.append || {}).value,\n  });\n};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {descriptors as NodeDesc, proxy as NodeProxy} from '../Environment/Node.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(node));\n        const nativeResult = NodeProxy.insertBefore(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.insertBefore(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(node));\n        const nativeResult = NodeProxy.appendChild(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.appendChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = NodeProxy.cloneNode(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.removeChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(nodeToInsert));\n        const nativeResult = NodeProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = NodeProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (NodeProxy.firstChild(this)) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = NodeProxy.childNodes(this);\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (NodeDesc.textContent && NodeDesc.textContent.get) {\n    patch_textContent(Node.prototype, NodeDesc.textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          const childNodes = NodeProxy.childNodes(this);\n          for (let i = 0; i < childNodes.length; i++) {\n            parts.push(childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          let child;\n          while (child = NodeProxy.firstChild(this)) {\n            NodeProxy.removeChild(this, child);\n          }\n          NodeProxy.appendChild(this, DocumentProxy.createTextNode(document, assignedValue));\n        },\n      });\n    });\n  }\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLTemplateElement'];\nexport const prototype = constructor ? constructor['prototype'] : undefined;\n\nexport const descriptors = !prototype ? {} : {\n  content: getDescriptor(prototype, 'content'),\n};\n\nconst contentGetter = getter(descriptors.content, function() { return this.content; });\n\nexport const proxy = {\n  content: node => contentGetter.call(node),\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {descriptors as ElementDesc, proxy as ElementProxy} from '../Environment/Element.js';\nimport {descriptors as HTMLElementDesc} from '../Environment/HTMLElement.js';\nimport {proxy as HTMLTemplateElementProxy} from '../Environment/HTMLTemplateElement.js';\nimport {proxy as NodeProxy} from '../Environment/Node.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (ElementDesc.attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = ElementProxy.attachShadow(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (ElementDesc.innerHTML && ElementDesc.innerHTML.get) {\n    patch_innerHTML(Element.prototype, ElementDesc.innerHTML);\n  } else if (HTMLElementDesc.innerHTML && HTMLElementDesc.innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, HTMLElementDesc.innerHTML);\n  } else {\n    // In this case, `innerHTML` has no exposed getter but still exists. Rather\n    // than using the environment proxy, we have to get and set it directly.\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = DocumentProxy.createElement(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return NodeProxy.cloneNode(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content =\n            (ElementProxy.localName(this) === 'template')\n            ? HTMLTemplateElementProxy.content(/** @type {!HTMLTemplateElement} */ (this))\n            : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (NodeProxy.childNodes(content).length > 0) {\n            NodeProxy.removeChild(content, content.childNodes[0]);\n          }\n          while (NodeProxy.childNodes(rawDiv).length > 0) {\n            NodeProxy.appendChild(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.setAttribute(this, name, newValue);\n      }\n\n      const oldValue = ElementProxy.getAttribute(this, name);\n      ElementProxy.setAttribute(this, name, newValue);\n      newValue = ElementProxy.getAttribute(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.setAttributeNS(this, namespace, name, newValue);\n      }\n\n      const oldValue = ElementProxy.getAttributeNS(this, namespace, name);\n      ElementProxy.setAttributeNS(this, namespace, name, newValue);\n      newValue = ElementProxy.getAttributeNS(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.removeAttribute(this, name);\n      }\n\n      const oldValue = ElementProxy.getAttribute(this, name);\n      ElementProxy.removeAttribute(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.removeAttributeNS(this, namespace, name);\n      }\n\n      const oldValue = ElementProxy.getAttributeNS(this, namespace, name);\n      ElementProxy.removeAttributeNS(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = ElementProxy.getAttributeNS(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (HTMLElementDesc.insertAdjacentElement && HTMLElementDesc.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(HTMLElement.prototype, HTMLElementDesc.insertAdjacentElement.value);\n  } else if (ElementDesc.insertAdjacentElement && ElementDesc.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(Element.prototype, ElementDesc.insertAdjacentElement.value);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: (ElementDesc.prepend || {}).value,\n    append: (ElementDesc.append || {}).value,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: (ElementDesc.before || {}).value,\n    after: (ElementDesc.after || {}).value,\n    replaceWith: (ElementDesc.replaceWith || {}).value,\n    remove: (ElementDesc.remove || {}).value,\n  });\n};\n"]}