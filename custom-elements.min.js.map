{"version":3,"sources":["/src/AlreadyConstructedMarker.js","/src/Utilities.js","/src/CustomElementState.js","/src/CustomElementInternals.js","/src/Deferred.js","/src/CustomElementRegistry.js","/src/DocumentConstructionObserver.js","/src/Patch/Native.js","/src/Patch/HTMLElement.js","/src/custom-elements.js","/src/Patch/Interface/ParentNode.js","/src/Patch/Document.js","/src/Patch/Node.js","/src/Patch/Interface/ChildNode.js","/src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","localName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","isConnected","node","__CE_isImportDocument","Document","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","undefined","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","callback","ELEMENT_NODE","shadowRoot","__CE_shadowRoot","child","firstChild","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","name","value","module$$src$CustomElementState.default","CustomElementState","custom","failed","constructor","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","element","patch","__CE_patched","i","length","connectTree","elements","__CE_state","module$$src$CustomElementState.default.custom","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","visitedImports","gatherElements","getAttribute","importNode","import","add","__CE_hasRegistry","addEventListener","__CE_documentLoadHandled","localNameToDefinition","get","constructionStack","result","Error","pop","e","module$$src$CustomElementState.default.failed","__CE_definition","attributeChangedCallback","observedAttributes","call","oldValue","newValue","namespace","indexOf","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","internals","_elementDefinitionIsRunning","_internals","_whenDefinedDeferred","_flushCallback","_flushScheduled","_pendingDeferred","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","Object","_doFlush","document","deferred","shift","whenDefined","reject","prior","window","defineProperty","flushCallback","DocumentConstructionObserver","doc","_document","_observer","readyState","MutationObserver","_handleMutations","bind","observe","childList","subtree","mutations","disconnect","addedNodes","j","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","Node_textContent","getOwnPropertyDescriptor","Element_attachShadow","Element","Element_innerHTML","Element_getAttribute","Element_setAttribute","setAttribute","Element_removeAttribute","removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$HTMLElement","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElement.call","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","prepend","apply","append","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","$jscompDefaultExport$$module$$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElementNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Document_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Document_append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","$jscompDefaultExport$$module$$src$Patch$Native.Node_insertBefore.call","nodeWasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_cloneNode.call","ownerDocument","$jscompDefaultExport$$module$$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","$jscompDefaultExport$$module$$src$Patch$Native.Node_replaceChild.call","nodeToInsertWasConnected","thisIsConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent.get","parts","textContent","join","createTextNode","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","$jscompDefaultExport$$module$$src$Patch$Native.Element_before","$jscompDefaultExport$$module$$src$Patch$Native.Element_after","wasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Element_replaceWith","$jscompDefaultExport$$module$$src$Patch$Native.Element_remove","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow.call","console","warn","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML.get","rawDiv","innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttributeNS.call","where","insertedElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_insertAdjacentElement.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Element_append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  /* TODO: Enable when shadydom's implementation of `isConnected` is fixed.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n  */\n\n  while (node && !(node.__CE_isImportDocument || node instanceof Document)) {\n    // TODO: Change this check from testing if the node is a DocumentFragment to\n    // testing `instanceof ShadowRoot` when shadydom exposes its implementation\n    // of ShadowRoot.\n    node = node.parentNode || (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? node.host : undefined);\n  }\n  return !!(node && (node.__CE_isImportDocument || node instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n */\nexport function walkDeepDescendantElements(root, callback) {\n  let node = root;\n\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      callback(node);\n\n      // Ignore descendants of link elements to prevent attempting to traverse\n      // elements created by the HTML Imports polyfill. When upgrading a tree,\n      // `CustomElementInternals#patchAndUpgradeTree` walks the `import` property\n      // of import links, which will point to either the true imported document\n      // (native) or the descendant containing the elements created to emulate the\n      // imported document (polyfill).\n      if (node.localName === 'link') {\n        node = nextSiblingOrAncestorSibling(root, node);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = node.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import * as Utilities from './Utilities';\nimport CEState from './CustomElementState';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports) {\n    if (!visitedImports) {\n      visitedImports = new Set();\n    }\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node) {\n          if (visitedImports.has(importNode)) return;\n          visitedImports.add(importNode);\n\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n\n          Utilities.walkDeepDescendantElements(importNode, gatherElements);\n        } else {\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            if (visitedImports.has(importNode)) return;\n            visitedImports.add(importNode);\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    Utilities.walkDeepDescendantElements(root, gatherElements);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      this.upgradeElement(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals';\nimport Deferred from './Deferred';\nimport * as Utilities from './Utilities';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._flushCallback = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushScheduled = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._pendingDeferred = [];\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    // If no flush is scheduled and no flush callback is defined, we can walk\n    // everything on this definition.\n    if (!this._flushScheduled && !this._flushCallback) {\n      this._internals.patchAndUpgradeTree(document);\n\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    } else {\n      this._pendingDeferred.push(localName);\n\n      // If we've already scheduled a flush, don't schedule a new one.\n      if (!this._flushScheduled) {\n        this._flushScheduled = true;\n        this._flushCallback(() => this._doFlush());\n      }\n    }\n  }\n\n  _doFlush() {\n    // If no new definitions were defined, don't attempt to flush.\n    if (this._flushScheduled === false) return;\n\n    this._flushScheduled = false;\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._pendingDeferred.length > 0) {\n      const localName = this._pendingDeferred.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nObject.defineProperty(CustomElementRegistry.prototype, 'polyfillFlushCallback', {\n  /**\n   * Setting `polyfillFlushCallback` to a function will set that function as the\n   * registry's 'flush callback'.\n   *\n   * If the flush callback is `undefined` (the default), calls to `define` cause\n   * synchronous full-document walks to find and upgrade elements and resolve\n   * any associated `whenDefined` promises immediately after the walk.\n   *\n   * If the flush callback is defined and the registry receives a call to\n   * `define`, the flush callback is called with a function that must be called\n   * to initiate the next flush. Particularly, no calls to `define` will trigger\n   * document walks to check for upgrades and no promises returned by\n   * `whenDefined` will be resolved until the next time the function given to\n   * the flush callback is called (or the flush callback is set back to\n   * `undefined`).\n   *\n   * ```javascript\n   * let doFlush = undefined;\n   * customElements.polyfillFlushCallback = function flushCallback(fn) {\n   *   doFlush = fn;\n   * };\n   *\n   * let promiseB = customElements.whenDefined('element-a');\n   * let promiseA = customElements.whenDefined('element-b');\n   *\n   * // These calls will not cause any 'element-a' or 'element-b' elements\n   * // already in the document to be upgraded and will not cause `promiseA` or\n   * // `promiseB` to be resolved. However, `flushCallback` was called and\n   * // `doFlush` is now a function.\n   * customElements.define('element-a', class extends HTMLElement {});\n   * customElements.define('element-b', class extends HTMLElement {});\n   *\n   * // This call will cause the document to be walked and any 'element-a' or\n   * // 'element-b' elements found (which are now defined) will be upgraded.\n   * // Also, `promiseA` and `promiseB` will be resolved.\n   * doFlush();\n   *\n   * let promiseC = customElements.whenDefined('element-c');\n   *\n   * // Once again 'element-c' elements in the document are not upgraded and\n   * // `promiseC` is not resolved.\n   * customElements.define('element-c', class extends HTMLElement {});\n   *\n   * // Setting the flush callback to `undefined` walks the document for\n   * // upgrades and resolves any pending `whenDefined` promises, if any calls\n   * // to `define` were made since the last flush.\n   * customElements.polyfillFlushCallback = undefined;\n   * ```\n   *\n   * @this {CustomElementRegistry}\n   * @param {!Function|undefined} flushCallback\n   */\n  set: function(flushCallback) {\n    if (flushCallback === undefined) {\n      this._doFlush();\n    }\n    this._flushCallback = flushCallback;\n  }\n});\n","import CustomElementInternals from './CustomElementInternals';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this._observer.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport CEState from '../CustomElementState';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals';\nimport CustomElementRegistry from './CustomElementRegistry';\nimport DocumentConstructionObserver from './DocumentConstructionObserver';\n\nimport PatchHTMLElement from './Patch/HTMLElement';\nimport PatchDocument from './Patch/Document';\nimport PatchNode from './Patch/Node';\nimport PatchElement from './Patch/Element';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements || priorCustomElements['forcePolyfill']) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  if (priorCustomElements && priorCustomElements['polyfillFlushCallback'] instanceof Function) {\n    customElements['polyfillFlushCallback'] = priorCustomElements['polyfillFlushCallback'];\n  } else {\n    new DocumentConstructionObserver(internals, document);\n  }\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals';\nimport * as Utilities from '../../Utilities';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport * as Utilities from '../Utilities';\n\nimport PatchParentNode from './Interface/ParentNode';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport * as Utilities from '../Utilities';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals';\nimport * as Utilities from '../../Utilities';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport CEState from '../CustomElementState';\nimport * as Utilities from '../Utilities';\n\nimport PatchParentNode from './Interface/ParentNode';\nimport PatchChildNode from './Interface/ChildNode';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const removedNodes = Array.prototype.slice.apply(this.childNodes);\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          rawDiv.innerHTML = assignedValue;\n\n          while (this.childNodes.length > 0) {\n            Native.Node_removeChild.call(this, this.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(this, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'remoteAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, namespace);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'insertAdjacentElement',\n    /**\n     * @this {Element}\n     * @param {string} where\n     * @param {!Element} element\n     * @return {?Element}\n     */\n    function(where, element) {\n      const wasConnected = Utilities.isConnected(element);\n      const insertedElement = /** @type {!Element} */\n        (Native.Element_insertAdjacentElement.call(this, where, element));\n\n      if (wasConnected) {\n        internals.disconnectTree(element);\n      }\n\n      if (Utilities.isConnected(insertedElement)) {\n        internals.connectTree(element);\n      }\n      return insertedElement;\n    });\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n"]}