{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Utilities.js","src/CustomElementState.js","src/CustomElementInternals.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Patch/Native.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","localName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","isConnected","node","nativeValue","undefined","current","__CE_isImportDocument","Document","parentNode","window","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","callback","visitedImports","nodeType","Node","ELEMENT_NODE","element","getAttribute","importNode","import","add","child","firstChild","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","name","value","module$$src$CustomElementState.default","CustomElementState","custom","failed","constructor","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","patch","__CE_patched","i","length","connectTree","elements","__CE_state","module$$src$CustomElementState.default.custom","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","gatherElements","readyState","__CE_hasRegistry","addEventListener","__CE_documentLoadHandled","delete","localNameToDefinition","get","constructionStack","result","Error","pop","e","module$$src$CustomElementState.default.failed","__CE_definition","attributeChangedCallback","observedAttributes","call","oldValue","newValue","namespace","indexOf","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","MutationObserver","_handleMutations","bind","observe","childList","subtree","mutations","disconnect","addedNodes","j","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_unflushedLocalNames","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","Object","_flush","shift","deferred","whenDefined","reject","prior","polyfillWrapFlushCallback","outer","inner","flush","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","Node_textContent","getOwnPropertyDescriptor","Element_attachShadow","Element","Element_innerHTML","Element_getAttribute","Element_setAttribute","setAttribute","Element_removeAttribute","removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$HTMLElement","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElement.call","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","prepend","apply","append","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","$jscompDefaultExport$$module$$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElementNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Document_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Document_append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","$jscompDefaultExport$$module$$src$Patch$Native.Node_insertBefore.call","nodeWasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_cloneNode.call","ownerDocument","$jscompDefaultExport$$module$$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","$jscompDefaultExport$$module$$src$Patch$Native.Node_replaceChild.call","nodeToInsertWasConnected","thisIsConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent.get","parts","textContent","join","createTextNode","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","$jscompDefaultExport$$module$$src$Patch$Native.Element_before","$jscompDefaultExport$$module$$src$Patch$Native.Element_after","wasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Element_replaceWith","$jscompDefaultExport$$module$$src$Patch$Native.Element_remove","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow.call","console","warn","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML.get","rawDiv","innerHTML","content","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttributeNS.call","where","insertedElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_insertAdjacentElement.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Element_append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\r\n * This class exists only to work around Closure's lack of a way to describe\r\n * singletons. It represents the 'already constructed marker' used in custom\r\n * element construction stacks.\r\n *\r\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\r\n */\r\nclass AlreadyConstructedMarker {}\r\n\r\nexport default new AlreadyConstructedMarker();\r\n","const reservedTagList = new Set([\r\n  'annotation-xml',\r\n  'color-profile',\r\n  'font-face',\r\n  'font-face-src',\r\n  'font-face-uri',\r\n  'font-face-format',\r\n  'font-face-name',\r\n  'missing-glyph',\r\n]);\r\n\r\n/**\r\n * @param {string} localName\r\n * @returns {boolean}\r\n */\r\nexport function isValidCustomElementName(localName) {\r\n  const reserved = reservedTagList.has(localName);\r\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\r\n  return !reserved && validForm;\r\n}\r\n\r\n/**\r\n * @private\r\n * @param {!Node} node\r\n * @return {boolean}\r\n */\r\nexport function isConnected(node) {\r\n  // Use `Node#isConnected`, if defined.\r\n  const nativeValue = node.isConnected;\r\n  if (nativeValue !== undefined) {\r\n    return nativeValue;\r\n  }\r\n\r\n  /** @type {?Node|undefined} */\r\n  let current = node;\r\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\r\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\r\n  }\r\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\r\n}\r\n\r\n/**\r\n * @param {!Node} root\r\n * @param {!Node} start\r\n * @return {?Node}\r\n */\r\nfunction nextSiblingOrAncestorSibling(root, start) {\r\n  let node = start;\r\n  while (node && node !== root && !node.nextSibling) {\r\n    node = node.parentNode;\r\n  }\r\n  return (!node || node === root) ? null : node.nextSibling;\r\n}\r\n\r\n/**\r\n * @param {!Node} root\r\n * @param {!Node} start\r\n * @return {?Node}\r\n */\r\nfunction nextNode(root, start) {\r\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\r\n}\r\n\r\n/**\r\n * @param {!Node} root\r\n * @param {!function(!Element)} callback\r\n * @param {!Set<Node>=} visitedImports\r\n */\r\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\r\n  let node = root;\r\n  while (node) {\r\n    if (node.nodeType === Node.ELEMENT_NODE) {\r\n      const element = /** @type {!Element} */(node);\r\n\r\n      callback(element);\r\n\r\n      const localName = element.localName;\r\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\r\n        // If this import (polyfilled or not) has it's root node available,\r\n        // walk it.\r\n        const importNode = /** @type {!Node} */ (element.import);\r\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\r\n          // Prevent multiple walks of the same import root.\r\n          visitedImports.add(importNode);\r\n\r\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\r\n            walkDeepDescendantElements(child, callback, visitedImports);\r\n          }\r\n        }\r\n\r\n        // Ignore descendants of import links to prevent attempting to walk the\r\n        // elements created by the HTML Imports polyfill that we just walked\r\n        // above.\r\n        node = nextSiblingOrAncestorSibling(root, element);\r\n        continue;\r\n      } else if (localName === 'template') {\r\n        // Ignore descendants of templates. There shouldn't be any descendants\r\n        // because they will be moved into `.content` during construction in\r\n        // browsers that support template but, in case they exist and are still\r\n        // waiting to be moved by a polyfill, they will be ignored.\r\n        node = nextSiblingOrAncestorSibling(root, element);\r\n        continue;\r\n      }\r\n\r\n      // Walk shadow roots.\r\n      const shadowRoot = element.__CE_shadowRoot;\r\n      if (shadowRoot) {\r\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\r\n          walkDeepDescendantElements(child, callback, visitedImports);\r\n        }\r\n      }\r\n    }\r\n\r\n    node = nextNode(root, node);\r\n  }\r\n}\r\n\r\n/**\r\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\r\n * constructor is in the same scope\" warning without using\r\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\r\n *\r\n * @param {!Object} destination\r\n * @param {string} name\r\n * @param {*} value\r\n */\r\nexport function setPropertyUnchecked(destination, name, value) {\r\n  destination[name] = value;\r\n}\r\n","/**\r\n * @enum {number}\r\n */\r\nconst CustomElementState = {\r\n  custom: 1,\r\n  failed: 2,\r\n};\r\n\r\nexport default CustomElementState;\r\n","import * as Utilities from './Utilities';\r\nimport CEState from './CustomElementState';\r\n\r\nexport default class CustomElementInternals {\r\n  constructor() {\r\n    /** @type {!Map<string, !CustomElementDefinition>} */\r\n    this._localNameToDefinition = new Map();\r\n\r\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\r\n    this._constructorToDefinition = new Map();\r\n\r\n    /** @type {!Array<!function(!Node)>} */\r\n    this._patches = [];\r\n\r\n    /** @type {boolean} */\r\n    this._hasPatches = false;\r\n  }\r\n\r\n  /**\r\n   * @param {string} localName\r\n   * @param {!CustomElementDefinition} definition\r\n   */\r\n  setDefinition(localName, definition) {\r\n    this._localNameToDefinition.set(localName, definition);\r\n    this._constructorToDefinition.set(definition.constructor, definition);\r\n  }\r\n\r\n  /**\r\n   * @param {string} localName\r\n   * @return {!CustomElementDefinition|undefined}\r\n   */\r\n  localNameToDefinition(localName) {\r\n    return this._localNameToDefinition.get(localName);\r\n  }\r\n\r\n  /**\r\n   * @param {!Function} constructor\r\n   * @return {!CustomElementDefinition|undefined}\r\n   */\r\n  constructorToDefinition(constructor) {\r\n    return this._constructorToDefinition.get(constructor);\r\n  }\r\n\r\n  /**\r\n   * @param {!function(!Node)} listener\r\n   */\r\n  addPatch(listener) {\r\n    this._hasPatches = true;\r\n    this._patches.push(listener);\r\n  }\r\n\r\n  /**\r\n   * @param {!Node} node\r\n   */\r\n  patchTree(node) {\r\n    if (!this._hasPatches) return;\r\n\r\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\r\n  }\r\n\r\n  /**\r\n   * @param {!Node} node\r\n   */\r\n  patch(node) {\r\n    if (!this._hasPatches) return;\r\n\r\n    if (node.__CE_patched) return;\r\n    node.__CE_patched = true;\r\n\r\n    for (let i = 0; i < this._patches.length; i++) {\r\n      this._patches[i](node);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Node} root\r\n   */\r\n  connectTree(root) {\r\n    const elements = [];\r\n\r\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const element = elements[i];\r\n      if (element.__CE_state === CEState.custom) {\r\n        this.connectedCallback(element);\r\n      } else {\r\n        this.upgradeElement(element);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Node} root\r\n   */\r\n  disconnectTree(root) {\r\n    const elements = [];\r\n\r\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const element = elements[i];\r\n      if (element.__CE_state === CEState.custom) {\r\n        this.disconnectedCallback(element);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upgrades all uncustomized custom elements at and below a root node for\r\n   * which there is a definition. When custom element reaction callbacks are\r\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\r\n   * definitions, they are *not*), callbacks for both elements customized\r\n   * synchronously by the parser and elements being upgraded occur in the same\r\n   * relative order.\r\n   *\r\n   * NOTE: This function, when used to simulate the construction of a tree that\r\n   * is already created but not customized (i.e. by the parser), does *not*\r\n   * prevent the element from reading the 'final' (true) state of the tree. For\r\n   * example, the element, during truly synchronous parsing / construction would\r\n   * see that it contains no children as they have not yet been inserted.\r\n   * However, this function does not modify the tree, the element will\r\n   * (incorrectly) have children. Additionally, self-modification restrictions\r\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\r\n   *\r\n   *\r\n   * The following nested list shows the steps extending down from the HTML\r\n   * spec's parsing section that cause elements to be synchronously created and\r\n   * upgraded:\r\n   *\r\n   * The \"in body\" insertion mode:\r\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\r\n   * - Switch on token:\r\n   *   .. other cases ..\r\n   *   -> Any other start tag\r\n   *      - [Insert an HTML element](below) for the token.\r\n   *\r\n   * Insert an HTML element:\r\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\r\n   * - Insert a foreign element for the token in the HTML namespace:\r\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\r\n   *   - Create an element for a token:\r\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\r\n   *     - Will execute script flag is true?\r\n   *       - (Element queue pushed to the custom element reactions stack.)\r\n   *     - Create an element:\r\n   *       https://dom.spec.whatwg.org/#concept-create-element\r\n   *       - Sync CE flag is true?\r\n   *         - Constructor called.\r\n   *         - Self-modification restrictions enforced.\r\n   *       - Sync CE flag is false?\r\n   *         - (Upgrade reaction enqueued.)\r\n   *     - Attributes appended to element.\r\n   *       (`attributeChangedCallback` reactions enqueued.)\r\n   *     - Will execute script flag is true?\r\n   *       - (Element queue popped from the custom element reactions stack.\r\n   *         Reactions in the popped stack are invoked.)\r\n   *   - (Element queue pushed to the custom element reactions stack.)\r\n   *   - Insert the element:\r\n   *     https://dom.spec.whatwg.org/#concept-node-insert\r\n   *     - Shadow-including descendants are connected. During parsing\r\n   *       construction, there are no shadow-*excluding* descendants.\r\n   *       However, the constructor may have validly attached a shadow\r\n   *       tree to itself and added descendants to that shadow tree.\r\n   *       (`connectedCallback` reactions enqueued.)\r\n   *   - (Element queue popped from the custom element reactions stack.\r\n   *     Reactions in the popped stack are invoked.)\r\n   *\r\n   * @param {!Node} root\r\n   * @param {!Set<Node>=} visitedImports\r\n   */\r\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\r\n    const elements = [];\r\n\r\n    const gatherElements = element => {\r\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\r\n        // The HTML Imports polyfill sets a descendant element of the link to\r\n        // the `import` property, specifically this is *not* a Document.\r\n        const importNode = /** @type {?Node} */ (element.import);\r\n\r\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\r\n          importNode.__CE_isImportDocument = true;\r\n\r\n          // Connected links are associated with the registry.\r\n          importNode.__CE_hasRegistry = true;\r\n        } else {\r\n          // If this link's import root is not available, its contents can't be\r\n          // walked. Wait for 'load' and walk it when it's ready.\r\n          element.addEventListener('load', () => {\r\n            const importNode = /** @type {!Node} */ (element.import);\r\n\r\n            if (importNode.__CE_documentLoadHandled) return;\r\n            importNode.__CE_documentLoadHandled = true;\r\n\r\n            importNode.__CE_isImportDocument = true;\r\n\r\n            // Connected links are associated with the registry.\r\n            importNode.__CE_hasRegistry = true;\r\n\r\n            // Clone the `visitedImports` set that was populated sync during\r\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\r\n            // be added. Then, remove *this* link's import node so that we can\r\n            // walk that import again, even if it was partially walked later\r\n            // during the same `patchAndUpgradeTree` call.\r\n            const clonedVisitedImports = new Set(visitedImports);\r\n            visitedImports.delete(importNode);\r\n\r\n            this.patchAndUpgradeTree(importNode, visitedImports);\r\n          });\r\n        }\r\n      } else {\r\n        elements.push(element);\r\n      }\r\n    };\r\n\r\n    // `walkDeepDescendantElements` populates (and internally checks against)\r\n    // `visitedImports` when traversing a loaded import.\r\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\r\n\r\n    if (this._hasPatches) {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        this.patch(elements[i]);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      this.upgradeElement(elements[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} element\r\n   */\r\n  upgradeElement(element) {\r\n    const currentState = element.__CE_state;\r\n    if (currentState !== undefined) return;\r\n\r\n    const definition = this.localNameToDefinition(element.localName);\r\n    if (!definition) return;\r\n\r\n    definition.constructionStack.push(element);\r\n\r\n    const constructor = definition.constructor;\r\n    try {\r\n      try {\r\n        let result = new (constructor)();\r\n        if (result !== element) {\r\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\r\n        }\r\n      } finally {\r\n        definition.constructionStack.pop();\r\n      }\r\n    } catch (e) {\r\n      element.__CE_state = CEState.failed;\r\n      throw e;\r\n    }\r\n\r\n    element.__CE_state = CEState.custom;\r\n    element.__CE_definition = definition;\r\n\r\n    if (definition.attributeChangedCallback) {\r\n      const observedAttributes = definition.observedAttributes;\r\n      for (let i = 0; i < observedAttributes.length; i++) {\r\n        const name = observedAttributes[i];\r\n        const value = element.getAttribute(name);\r\n        if (value !== null) {\r\n          this.attributeChangedCallback(element, name, null, value, null);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (Utilities.isConnected(element)) {\r\n      this.connectedCallback(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} element\r\n   */\r\n  connectedCallback(element) {\r\n    const definition = element.__CE_definition;\r\n    if (definition.connectedCallback) {\r\n      definition.connectedCallback.call(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} element\r\n   */\r\n  disconnectedCallback(element) {\r\n    const definition = element.__CE_definition;\r\n    if (definition.disconnectedCallback) {\r\n      definition.disconnectedCallback.call(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} element\r\n   * @param {string} name\r\n   * @param {?string} oldValue\r\n   * @param {?string} newValue\r\n   * @param {?string} namespace\r\n   */\r\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\r\n    const definition = element.__CE_definition;\r\n    if (\r\n      definition.attributeChangedCallback &&\r\n      definition.observedAttributes.indexOf(name) > -1\r\n    ) {\r\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\r\n    }\r\n  }\r\n}\r\n","import CustomElementInternals from './CustomElementInternals';\r\n\r\nexport default class DocumentConstructionObserver {\r\n  constructor(internals, doc) {\r\n    /**\r\n     * @type {!CustomElementInternals}\r\n     */\r\n    this._internals = internals;\r\n\r\n    /**\r\n     * @type {!Document}\r\n     */\r\n    this._document = doc;\r\n\r\n    /**\r\n     * @type {MutationObserver|undefined}\r\n     */\r\n    this._observer = undefined;\r\n\r\n\r\n    // Simulate tree construction for all currently accessible nodes in the\r\n    // document.\r\n    this._internals.patchAndUpgradeTree(this._document);\r\n\r\n    if (this._document.readyState === 'loading') {\r\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\r\n\r\n      // Nodes created by the parser are given to the observer *before* the next\r\n      // task runs. Inline scripts are run in a new task. This means that the\r\n      // observer will be able to handle the newly parsed nodes before the inline\r\n      // script is run.\r\n      this._observer.observe(this._document, {\r\n        childList: true,\r\n        subtree: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    this._observer.disconnect();\r\n  }\r\n\r\n  /**\r\n   * @param {!Array<!MutationRecord>} mutations\r\n   */\r\n  _handleMutations(mutations) {\r\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\r\n    // nodes created within that document will be the result of script and\r\n    // should be handled by patching.\r\n    const readyState = this._document.readyState;\r\n    if (readyState === 'interactive' || readyState === 'complete') {\r\n      this.disconnect();\r\n    }\r\n\r\n    for (let i = 0; i < mutations.length; i++) {\r\n      const addedNodes = mutations[i].addedNodes;\r\n      for (let j = 0; j < addedNodes.length; j++) {\r\n        const node = addedNodes[j];\r\n        this._internals.patchAndUpgradeTree(node);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @template T\r\n */\r\nexport default class Deferred {\r\n  constructor() {\r\n    /**\r\n     * @private\r\n     * @type {T|undefined}\r\n     */\r\n    this._value = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Function|undefined}\r\n     */\r\n    this._resolve = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Promise<T>}\r\n     */\r\n    this._promise = new Promise(resolve => {\r\n      this._resolve = resolve;\r\n\r\n      if (this._value) {\r\n        resolve(this._value);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {T} value\r\n   */\r\n  resolve(value) {\r\n    if (this._value) {\r\n      throw new Error('Already resolved.');\r\n    }\r\n\r\n    this._value = value;\r\n\r\n    if (this._resolve) {\r\n      this._resolve(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {!Promise<T>}\r\n   */\r\n  toPromise() {\r\n    return this._promise;\r\n  }\r\n}\r\n","import CustomElementInternals from './CustomElementInternals';\r\nimport DocumentConstructionObserver from './DocumentConstructionObserver';\r\nimport Deferred from './Deferred';\r\nimport * as Utilities from './Utilities';\r\n\r\n/**\r\n * @unrestricted\r\n */\r\nexport default class CustomElementRegistry {\r\n\r\n  /**\r\n   * @param {!CustomElementInternals} internals\r\n   */\r\n  constructor(internals) {\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this._elementDefinitionIsRunning = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!CustomElementInternals}\r\n     */\r\n    this._internals = internals;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Map<string, !Deferred<undefined>>}\r\n     */\r\n    this._whenDefinedDeferred = new Map();\r\n\r\n    /**\r\n     * The default flush callback triggers the document walk synchronously.\r\n     * @private\r\n     * @type {!Function}\r\n     */\r\n    this._flushCallback = fn => fn();\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this._flushPending = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<string>}\r\n     */\r\n    this._unflushedLocalNames = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {!DocumentConstructionObserver}\r\n     */\r\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\r\n  }\r\n\r\n  /**\r\n   * @param {string} localName\r\n   * @param {!Function} constructor\r\n   */\r\n  define(localName, constructor) {\r\n    if (!(constructor instanceof Function)) {\r\n      throw new TypeError('Custom element constructors must be functions.');\r\n    }\r\n\r\n    if (!Utilities.isValidCustomElementName(localName)) {\r\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\r\n    }\r\n\r\n    if (this._internals.localNameToDefinition(localName)) {\r\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\r\n    }\r\n\r\n    if (this._elementDefinitionIsRunning) {\r\n      throw new Error('A custom element is already being defined.');\r\n    }\r\n    this._elementDefinitionIsRunning = true;\r\n\r\n    let connectedCallback;\r\n    let disconnectedCallback;\r\n    let adoptedCallback;\r\n    let attributeChangedCallback;\r\n    let observedAttributes;\r\n    try {\r\n      /** @type {!Object} */\r\n      const prototype = constructor.prototype;\r\n      if (!(prototype instanceof Object)) {\r\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\r\n      }\r\n\r\n      function getCallback(name) {\r\n        const callbackValue = prototype[name];\r\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\r\n          throw new Error(`The '${name}' callback must be a function.`);\r\n        }\r\n        return callbackValue;\r\n      }\r\n\r\n      connectedCallback = getCallback('connectedCallback');\r\n      disconnectedCallback = getCallback('disconnectedCallback');\r\n      adoptedCallback = getCallback('adoptedCallback');\r\n      attributeChangedCallback = getCallback('attributeChangedCallback');\r\n      observedAttributes = constructor['observedAttributes'] || [];\r\n    } catch (e) {\r\n      return;\r\n    } finally {\r\n      this._elementDefinitionIsRunning = false;\r\n    }\r\n\r\n    const definition = {\r\n      localName,\r\n      constructor,\r\n      connectedCallback,\r\n      disconnectedCallback,\r\n      adoptedCallback,\r\n      attributeChangedCallback,\r\n      observedAttributes,\r\n      constructionStack: [],\r\n    };\r\n\r\n    this._internals.setDefinition(localName, definition);\r\n\r\n    this._unflushedLocalNames.push(localName);\r\n\r\n    // If we've already called the flush callback and it hasn't called back yet,\r\n    // don't call it again.\r\n    if (!this._flushPending) {\r\n      this._flushPending = true;\r\n      this._flushCallback(() => this._flush());\r\n    }\r\n  }\r\n\r\n  _flush() {\r\n    // If no new definitions were defined, don't attempt to flush. This could\r\n    // happen if a flush callback keeps the function it is given and calls it\r\n    // multiple times.\r\n    if (this._flushPending === false) return;\r\n\r\n    this._flushPending = false;\r\n    this._internals.patchAndUpgradeTree(document);\r\n\r\n    while (this._unflushedLocalNames.length > 0) {\r\n      const localName = this._unflushedLocalNames.shift();\r\n      const deferred = this._whenDefinedDeferred.get(localName);\r\n      if (deferred) {\r\n        deferred.resolve(undefined);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} localName\r\n   * @return {Function|undefined}\r\n   */\r\n  get(localName) {\r\n    const definition = this._internals.localNameToDefinition(localName);\r\n    if (definition) {\r\n      return definition.constructor;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {string} localName\r\n   * @return {!Promise<undefined>}\r\n   */\r\n  whenDefined(localName) {\r\n    if (!Utilities.isValidCustomElementName(localName)) {\r\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\r\n    }\r\n\r\n    const prior = this._whenDefinedDeferred.get(localName);\r\n    if (prior) {\r\n      return prior.toPromise();\r\n    }\r\n\r\n    const deferred = new Deferred();\r\n    this._whenDefinedDeferred.set(localName, deferred);\r\n\r\n    const definition = this._internals.localNameToDefinition(localName);\r\n    // Resolve immediately only if the given local name has a definition *and*\r\n    // the full document walk to upgrade elements with that local name has\r\n    // already happened.\r\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\r\n      deferred.resolve(undefined);\r\n    }\r\n\r\n    return deferred.toPromise();\r\n  }\r\n\r\n  polyfillWrapFlushCallback(outer) {\r\n    this._documentConstructionObserver.disconnect();\r\n    const inner = this._flushCallback;\r\n    this._flushCallback = flush => outer(() => inner(flush));\r\n  }\r\n}\r\n\r\n// Closure compiler exports.\r\nwindow['CustomElementRegistry'] = CustomElementRegistry;\r\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\r\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\r\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\r\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\r\n","export default {\r\n  Document_createElement: window.Document.prototype.createElement,\r\n  Document_createElementNS: window.Document.prototype.createElementNS,\r\n  Document_importNode: window.Document.prototype.importNode,\r\n  Document_prepend: window.Document.prototype['prepend'],\r\n  Document_append: window.Document.prototype['append'],\r\n  Node_cloneNode: window.Node.prototype.cloneNode,\r\n  Node_appendChild: window.Node.prototype.appendChild,\r\n  Node_insertBefore: window.Node.prototype.insertBefore,\r\n  Node_removeChild: window.Node.prototype.removeChild,\r\n  Node_replaceChild: window.Node.prototype.replaceChild,\r\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\r\n  Element_attachShadow: window.Element.prototype['attachShadow'],\r\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\r\n  Element_getAttribute: window.Element.prototype.getAttribute,\r\n  Element_setAttribute: window.Element.prototype.setAttribute,\r\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\r\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\r\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\r\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\r\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\r\n  Element_prepend: window.Element.prototype['prepend'],\r\n  Element_append: window.Element.prototype['append'],\r\n  Element_before: window.Element.prototype['before'],\r\n  Element_after: window.Element.prototype['after'],\r\n  Element_replaceWith: window.Element.prototype['replaceWith'],\r\n  Element_remove: window.Element.prototype['remove'],\r\n  HTMLElement: window.HTMLElement,\r\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\r\n};\r\n","import Native from './Native';\r\nimport CustomElementInternals from '../CustomElementInternals';\r\nimport CEState from '../CustomElementState';\r\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker';\r\n\r\n/**\r\n * @param {!CustomElementInternals} internals\r\n */\r\nexport default function(internals) {\r\n  window['HTMLElement'] = (function() {\r\n    /**\r\n     * @type {function(new: HTMLElement): !HTMLElement}\r\n     */\r\n    function HTMLElement() {\r\n      // This should really be `new.target` but `new.target` can't be emulated\r\n      // in ES5. Assuming the user keeps the default value of the constructor's\r\n      // prototype's `constructor` property, this is equivalent.\r\n      /** @type {!Function} */\r\n      const constructor = this.constructor;\r\n\r\n      const definition = internals.constructorToDefinition(constructor);\r\n      if (!definition) {\r\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\r\n      }\r\n\r\n      const constructionStack = definition.constructionStack;\r\n\r\n      if (constructionStack.length === 0) {\r\n        const element = Native.Document_createElement.call(document, definition.localName);\r\n        Object.setPrototypeOf(element, constructor.prototype);\r\n        element.__CE_state = CEState.custom;\r\n        element.__CE_definition = definition;\r\n        internals.patch(element);\r\n        return element;\r\n      }\r\n\r\n      const lastIndex = constructionStack.length - 1;\r\n      const element = constructionStack[lastIndex];\r\n      if (element === AlreadyConstructedMarker) {\r\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\r\n      }\r\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\r\n\r\n      Object.setPrototypeOf(element, constructor.prototype);\r\n      internals.patch(/** @type {!HTMLElement} */ (element));\r\n\r\n      return element;\r\n    }\r\n\r\n    HTMLElement.prototype = Native.HTMLElement.prototype;\r\n\r\n    return HTMLElement;\r\n  })();\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\nimport CustomElementInternals from './CustomElementInternals';\r\nimport CustomElementRegistry from './CustomElementRegistry';\r\n\r\nimport PatchHTMLElement from './Patch/HTMLElement';\r\nimport PatchDocument from './Patch/Document';\r\nimport PatchNode from './Patch/Node';\r\nimport PatchElement from './Patch/Element';\r\n\r\nconst priorCustomElements = window['customElements'];\r\n\r\nif (!priorCustomElements ||\r\n     priorCustomElements['forcePolyfill'] ||\r\n     (typeof priorCustomElements['define'] != 'function') ||\r\n     (typeof priorCustomElements['get'] != 'function')) {\r\n  /** @type {!CustomElementInternals} */\r\n  const internals = new CustomElementInternals();\r\n\r\n  PatchHTMLElement(internals);\r\n  PatchDocument(internals);\r\n  PatchNode(internals);\r\n  PatchElement(internals);\r\n\r\n  // The main document is always associated with the registry.\r\n  document.__CE_hasRegistry = true;\r\n\r\n  /** @type {!CustomElementRegistry} */\r\n  const customElements = new CustomElementRegistry(internals);\r\n\r\n  Object.defineProperty(window, 'customElements', {\r\n    configurable: true,\r\n    enumerable: true,\r\n    value: customElements,\r\n  });\r\n}\r\n","import CustomElementInternals from '../../CustomElementInternals';\r\nimport * as Utilities from '../../Utilities';\r\n\r\n/**\r\n * @typedef {{\r\n *   prepend: !function(...(!Node|string)),\r\n  *  append: !function(...(!Node|string)),\r\n * }}\r\n */\r\nlet ParentNodeNativeMethods;\r\n\r\n/**\r\n * @param {!CustomElementInternals} internals\r\n * @param {!Object} destination\r\n * @param {!ParentNodeNativeMethods} builtIn\r\n */\r\nexport default function(internals, destination, builtIn) {\r\n  /**\r\n   * @param {...(!Node|string)} nodes\r\n   */\r\n  destination['prepend'] = function(...nodes) {\r\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\r\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\r\n      // DocumentFragments are not connected and will not be added to the list.\r\n      return node instanceof Node && Utilities.isConnected(node);\r\n    }));\r\n\r\n    builtIn.prepend.apply(this, nodes);\r\n\r\n    for (let i = 0; i < connectedBefore.length; i++) {\r\n      internals.disconnectTree(connectedBefore[i]);\r\n    }\r\n\r\n    if (Utilities.isConnected(this)) {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (node instanceof Element) {\r\n          internals.connectTree(node);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {...(!Node|string)} nodes\r\n   */\r\n  destination['append'] = function(...nodes) {\r\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\r\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\r\n      // DocumentFragments are not connected and will not be added to the list.\r\n      return node instanceof Node && Utilities.isConnected(node);\r\n    }));\r\n\r\n    builtIn.append.apply(this, nodes);\r\n\r\n    for (let i = 0; i < connectedBefore.length; i++) {\r\n      internals.disconnectTree(connectedBefore[i]);\r\n    }\r\n\r\n    if (Utilities.isConnected(this)) {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (node instanceof Element) {\r\n          internals.connectTree(node);\r\n        }\r\n      }\r\n    }\r\n  };\r\n};\r\n","import Native from './Native';\r\nimport CustomElementInternals from '../CustomElementInternals';\r\nimport * as Utilities from '../Utilities';\r\n\r\nimport PatchParentNode from './Interface/ParentNode';\r\n\r\n/**\r\n * @param {!CustomElementInternals} internals\r\n */\r\nexport default function(internals) {\r\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\r\n    /**\r\n     * @this {Document}\r\n     * @param {string} localName\r\n     * @return {!Element}\r\n     */\r\n    function(localName) {\r\n      // Only create custom elements if this document is associated with the registry.\r\n      if (this.__CE_hasRegistry) {\r\n        const definition = internals.localNameToDefinition(localName);\r\n        if (definition) {\r\n          return new (definition.constructor)();\r\n        }\r\n      }\r\n\r\n      const result = /** @type {!Element} */\r\n        (Native.Document_createElement.call(this, localName));\r\n      internals.patch(result);\r\n      return result;\r\n    });\r\n\r\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\r\n    /**\r\n     * @this {Document}\r\n     * @param {!Node} node\r\n     * @param {boolean=} deep\r\n     * @return {!Node}\r\n     */\r\n    function(node, deep) {\r\n      const clone = Native.Document_importNode.call(this, node, deep);\r\n      // Only create custom elements if this document is associated with the registry.\r\n      if (!this.__CE_hasRegistry) {\r\n        internals.patchTree(clone);\r\n      } else {\r\n        internals.patchAndUpgradeTree(clone);\r\n      }\r\n      return clone;\r\n    });\r\n\r\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\r\n\r\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\r\n    /**\r\n     * @this {Document}\r\n     * @param {?string} namespace\r\n     * @param {string} localName\r\n     * @return {!Element}\r\n     */\r\n    function(namespace, localName) {\r\n      // Only create custom elements if this document is associated with the registry.\r\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\r\n        const definition = internals.localNameToDefinition(localName);\r\n        if (definition) {\r\n          return new (definition.constructor)();\r\n        }\r\n      }\r\n\r\n      const result = /** @type {!Element} */\r\n        (Native.Document_createElementNS.call(this, namespace, localName));\r\n      internals.patch(result);\r\n      return result;\r\n    });\r\n\r\n  PatchParentNode(internals, Document.prototype, {\r\n    prepend: Native.Document_prepend,\r\n    append: Native.Document_append,\r\n  });\r\n};\r\n","import Native from './Native';\r\nimport CustomElementInternals from '../CustomElementInternals';\r\nimport * as Utilities from '../Utilities';\r\n\r\n/**\r\n * @param {!CustomElementInternals} internals\r\n */\r\nexport default function(internals) {\r\n  // `Node#nodeValue` is implemented on `Attr`.\r\n  // `Node#textContent` is implemented on `Attr`, `Element`.\r\n\r\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\r\n    /**\r\n     * @this {Node}\r\n     * @param {!Node} node\r\n     * @param {?Node} refNode\r\n     * @return {!Node}\r\n     */\r\n    function(node, refNode) {\r\n      if (node instanceof DocumentFragment) {\r\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\r\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\r\n\r\n        // DocumentFragments can't be connected, so `disconnectTree` will never\r\n        // need to be called on a DocumentFragment's children after inserting it.\r\n\r\n        if (Utilities.isConnected(this)) {\r\n          for (let i = 0; i < insertedNodes.length; i++) {\r\n            internals.connectTree(insertedNodes[i]);\r\n          }\r\n        }\r\n\r\n        return nativeResult;\r\n      }\r\n\r\n      const nodeWasConnected = Utilities.isConnected(node);\r\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\r\n\r\n      if (nodeWasConnected) {\r\n        internals.disconnectTree(node);\r\n      }\r\n\r\n      if (Utilities.isConnected(this)) {\r\n        internals.connectTree(node);\r\n      }\r\n\r\n      return nativeResult;\r\n    });\r\n\r\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\r\n    /**\r\n     * @this {Node}\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     */\r\n    function(node) {\r\n      if (node instanceof DocumentFragment) {\r\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\r\n        const nativeResult = Native.Node_appendChild.call(this, node);\r\n\r\n        // DocumentFragments can't be connected, so `disconnectTree` will never\r\n        // need to be called on a DocumentFragment's children after inserting it.\r\n\r\n        if (Utilities.isConnected(this)) {\r\n          for (let i = 0; i < insertedNodes.length; i++) {\r\n            internals.connectTree(insertedNodes[i]);\r\n          }\r\n        }\r\n\r\n        return nativeResult;\r\n      }\r\n\r\n      const nodeWasConnected = Utilities.isConnected(node);\r\n      const nativeResult = Native.Node_appendChild.call(this, node);\r\n\r\n      if (nodeWasConnected) {\r\n        internals.disconnectTree(node);\r\n      }\r\n\r\n      if (Utilities.isConnected(this)) {\r\n        internals.connectTree(node);\r\n      }\r\n\r\n      return nativeResult;\r\n    });\r\n\r\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\r\n    /**\r\n     * @this {Node}\r\n     * @param {boolean=} deep\r\n     * @return {!Node}\r\n     */\r\n    function(deep) {\r\n      const clone = Native.Node_cloneNode.call(this, deep);\r\n      // Only create custom elements if this element's owner document is\r\n      // associated with the registry.\r\n      if (!this.ownerDocument.__CE_hasRegistry) {\r\n        internals.patchTree(clone);\r\n      } else {\r\n        internals.patchAndUpgradeTree(clone);\r\n      }\r\n      return clone;\r\n    });\r\n\r\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\r\n    /**\r\n     * @this {Node}\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     */\r\n    function(node) {\r\n      const nodeWasConnected = Utilities.isConnected(node);\r\n      const nativeResult = Native.Node_removeChild.call(this, node);\r\n\r\n      if (nodeWasConnected) {\r\n        internals.disconnectTree(node);\r\n      }\r\n\r\n      return nativeResult;\r\n    });\r\n\r\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\r\n    /**\r\n     * @this {Node}\r\n     * @param {!Node} nodeToInsert\r\n     * @param {!Node} nodeToRemove\r\n     * @return {!Node}\r\n     */\r\n    function(nodeToInsert, nodeToRemove) {\r\n      if (nodeToInsert instanceof DocumentFragment) {\r\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\r\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\r\n\r\n        // DocumentFragments can't be connected, so `disconnectTree` will never\r\n        // need to be called on a DocumentFragment's children after inserting it.\r\n\r\n        if (Utilities.isConnected(this)) {\r\n          internals.disconnectTree(nodeToRemove);\r\n          for (let i = 0; i < insertedNodes.length; i++) {\r\n            internals.connectTree(insertedNodes[i]);\r\n          }\r\n        }\r\n\r\n        return nativeResult;\r\n      }\r\n\r\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\r\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\r\n      const thisIsConnected = Utilities.isConnected(this);\r\n\r\n      if (thisIsConnected) {\r\n        internals.disconnectTree(nodeToRemove);\r\n      }\r\n\r\n      if (nodeToInsertWasConnected) {\r\n        internals.disconnectTree(nodeToInsert);\r\n      }\r\n\r\n      if (thisIsConnected) {\r\n        internals.connectTree(nodeToInsert);\r\n      }\r\n\r\n      return nativeResult;\r\n    });\r\n\r\n\r\n  function patch_textContent(destination, baseDescriptor) {\r\n    Object.defineProperty(destination, 'textContent', {\r\n      enumerable: baseDescriptor.enumerable,\r\n      configurable: true,\r\n      get: baseDescriptor.get,\r\n      set: /** @this {Node} */ function(assignedValue) {\r\n        // If this is a text node then there are no nodes to disconnect.\r\n        if (this.nodeType === Node.TEXT_NODE) {\r\n          baseDescriptor.set.call(this, assignedValue);\r\n          return;\r\n        }\r\n\r\n        let removedNodes = undefined;\r\n        // Checking for `firstChild` is faster than reading `childNodes.length`\r\n        // to compare with 0.\r\n        if (this.firstChild) {\r\n          // Using `childNodes` is faster than `children`, even though we only\r\n          // care about elements.\r\n          const childNodes = this.childNodes;\r\n          const childNodesLength = childNodes.length;\r\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\r\n            // Copying an array by iterating is faster than using slice.\r\n            removedNodes = new Array(childNodesLength);\r\n            for (let i = 0; i < childNodesLength; i++) {\r\n              removedNodes[i] = childNodes[i];\r\n            }\r\n          }\r\n        }\r\n\r\n        baseDescriptor.set.call(this, assignedValue);\r\n\r\n        if (removedNodes) {\r\n          for (let i = 0; i < removedNodes.length; i++) {\r\n            internals.disconnectTree(removedNodes[i]);\r\n          }\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  if (Native.Node_textContent && Native.Node_textContent.get) {\r\n    patch_textContent(Node.prototype, Native.Node_textContent);\r\n  } else {\r\n    internals.addPatch(function(element) {\r\n      patch_textContent(element, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        // NOTE: This implementation of the `textContent` getter assumes that\r\n        // text nodes' `textContent` getter will not be patched.\r\n        get: /** @this {Node} */ function() {\r\n          /** @type {!Array<string>} */\r\n          const parts = [];\r\n\r\n          for (let i = 0; i < this.childNodes.length; i++) {\r\n            parts.push(this.childNodes[i].textContent);\r\n          }\r\n\r\n          return parts.join('');\r\n        },\r\n        set: /** @this {Node} */ function(assignedValue) {\r\n          while (this.firstChild) {\r\n            Native.Node_removeChild.call(this, this.firstChild);\r\n          }\r\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\r\n        },\r\n      });\r\n    });\r\n  }\r\n};\r\n","import CustomElementInternals from '../../CustomElementInternals';\r\nimport * as Utilities from '../../Utilities';\r\n\r\n/**\r\n * @typedef {{\r\n *   before: !function(...(!Node|string)),\r\n *   after: !function(...(!Node|string)),\r\n *   replaceWith: !function(...(!Node|string)),\r\n *   remove: !function(),\r\n * }}\r\n */\r\nlet ChildNodeNativeMethods;\r\n\r\n/**\r\n * @param {!CustomElementInternals} internals\r\n * @param {!Object} destination\r\n * @param {!ChildNodeNativeMethods} builtIn\r\n */\r\nexport default function(internals, destination, builtIn) {\r\n  /**\r\n   * @param {...(!Node|string)} nodes\r\n   */\r\n  destination['before'] = function(...nodes) {\r\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\r\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\r\n      // DocumentFragments are not connected and will not be added to the list.\r\n      return node instanceof Node && Utilities.isConnected(node);\r\n    }));\r\n\r\n    builtIn.before.apply(this, nodes);\r\n\r\n    for (let i = 0; i < connectedBefore.length; i++) {\r\n      internals.disconnectTree(connectedBefore[i]);\r\n    }\r\n\r\n    if (Utilities.isConnected(this)) {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (node instanceof Element) {\r\n          internals.connectTree(node);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {...(!Node|string)} nodes\r\n   */\r\n  destination['after'] = function(...nodes) {\r\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\r\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\r\n      // DocumentFragments are not connected and will not be added to the list.\r\n      return node instanceof Node && Utilities.isConnected(node);\r\n    }));\r\n\r\n    builtIn.after.apply(this, nodes);\r\n\r\n    for (let i = 0; i < connectedBefore.length; i++) {\r\n      internals.disconnectTree(connectedBefore[i]);\r\n    }\r\n\r\n    if (Utilities.isConnected(this)) {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (node instanceof Element) {\r\n          internals.connectTree(node);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {...(!Node|string)} nodes\r\n   */\r\n  destination['replaceWith'] = function(...nodes) {\r\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\r\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\r\n      // DocumentFragments are not connected and will not be added to the list.\r\n      return node instanceof Node && Utilities.isConnected(node);\r\n    }));\r\n\r\n    const wasConnected = Utilities.isConnected(this);\r\n\r\n    builtIn.replaceWith.apply(this, nodes);\r\n\r\n    for (let i = 0; i < connectedBefore.length; i++) {\r\n      internals.disconnectTree(connectedBefore[i]);\r\n    }\r\n\r\n    if (wasConnected) {\r\n      internals.disconnectTree(this);\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (node instanceof Element) {\r\n          internals.connectTree(node);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  destination['remove'] = function() {\r\n    const wasConnected = Utilities.isConnected(this);\r\n\r\n    builtIn.remove.call(this);\r\n\r\n    if (wasConnected) {\r\n      internals.disconnectTree(this);\r\n    }\r\n  };\r\n};\r\n","import Native from './Native';\r\nimport CustomElementInternals from '../CustomElementInternals';\r\nimport CEState from '../CustomElementState';\r\nimport * as Utilities from '../Utilities';\r\n\r\nimport PatchParentNode from './Interface/ParentNode';\r\nimport PatchChildNode from './Interface/ChildNode';\r\n\r\n/**\r\n * @param {!CustomElementInternals} internals\r\n */\r\nexport default function(internals) {\r\n  if (Native.Element_attachShadow) {\r\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\r\n      /**\r\n       * @this {Element}\r\n       * @param {!{mode: string}} init\r\n       * @return {ShadowRoot}\r\n       */\r\n      function(init) {\r\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\r\n        this.__CE_shadowRoot = shadowRoot;\r\n        return shadowRoot;\r\n      });\r\n  } else {\r\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\r\n  }\r\n\r\n\r\n  function patch_innerHTML(destination, baseDescriptor) {\r\n    Object.defineProperty(destination, 'innerHTML', {\r\n      enumerable: baseDescriptor.enumerable,\r\n      configurable: true,\r\n      get: baseDescriptor.get,\r\n      set: /** @this {Element} */ function(htmlString) {\r\n        const removedNodes = Array.prototype.slice.apply(this.childNodes);\r\n\r\n        baseDescriptor.set.call(this, htmlString);\r\n\r\n        if (Utilities.isConnected(this)) {\r\n          for (let i = 0; i < removedNodes.length; i++) {\r\n            internals.disconnectTree(removedNodes[i]);\r\n          }\r\n        }\r\n\r\n        // Only create custom elements if this element's owner document is\r\n        // associated with the registry.\r\n        if (!this.ownerDocument.__CE_hasRegistry) {\r\n          internals.patchTree(this);\r\n        } else {\r\n          internals.patchAndUpgradeTree(this);\r\n        }\r\n        return htmlString;\r\n      },\r\n    });\r\n  }\r\n\r\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\r\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\r\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\r\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\r\n  } else {\r\n\r\n    /** @type {HTMLDivElement} */\r\n    const rawDiv = Native.Document_createElement.call(document, 'div');\r\n\r\n    internals.addPatch(function(element) {\r\n      patch_innerHTML(element, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\r\n        // of the element and returning the resulting element's `innerHTML`.\r\n        // TODO: Is this too expensive?\r\n        get: /** @this {Element} */ function() {\r\n          return Native.Node_cloneNode.call(this, true).innerHTML;\r\n        },\r\n        // Implements setting `innerHTML` by creating an unpatched element,\r\n        // setting `innerHTML` of that element and replacing the target\r\n        // element's children with those of the unpatched element.\r\n        set: /** @this {Element} */ function(assignedValue) {\r\n          // NOTE: re-route to `content` for `template` elements.\r\n          // We need to do this because `template.appendChild` does not\r\n          // route into `template.content`.\r\n          /** @type {!Node} */\r\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\r\n          rawDiv.innerHTML = assignedValue;\r\n\r\n          while (content.childNodes.length > 0) {\r\n            Native.Node_removeChild.call(content, content.childNodes[0]);\r\n          }\r\n          while (rawDiv.childNodes.length > 0) {\r\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\r\n          }\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\r\n    /**\r\n     * @this {Element}\r\n     * @param {string} name\r\n     * @param {string} newValue\r\n     */\r\n    function(name, newValue) {\r\n      // Fast path for non-custom elements.\r\n      if (this.__CE_state !== CEState.custom) {\r\n        return Native.Element_setAttribute.call(this, name, newValue);\r\n      }\r\n\r\n      const oldValue = Native.Element_getAttribute.call(this, name);\r\n      Native.Element_setAttribute.call(this, name, newValue);\r\n      newValue = Native.Element_getAttribute.call(this, name);\r\n      if (oldValue !== newValue) {\r\n        internals.attributeChangedCallback(this, name, oldValue, newValue, null);\r\n      }\r\n    });\r\n\r\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\r\n    /**\r\n     * @this {Element}\r\n     * @param {?string} namespace\r\n     * @param {string} name\r\n     * @param {string} newValue\r\n     */\r\n    function(namespace, name, newValue) {\r\n      // Fast path for non-custom elements.\r\n      if (this.__CE_state !== CEState.custom) {\r\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\r\n      }\r\n\r\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\r\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\r\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\r\n      if (oldValue !== newValue) {\r\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\r\n      }\r\n    });\r\n\r\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\r\n    /**\r\n     * @this {Element}\r\n     * @param {string} name\r\n     */\r\n    function(name) {\r\n      // Fast path for non-custom elements.\r\n      if (this.__CE_state !== CEState.custom) {\r\n        return Native.Element_removeAttribute.call(this, name);\r\n      }\r\n\r\n      const oldValue = Native.Element_getAttribute.call(this, name);\r\n      Native.Element_removeAttribute.call(this, name);\r\n      if (oldValue !== null) {\r\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\r\n      }\r\n    });\r\n\r\n  Utilities.setPropertyUnchecked(Element.prototype, 'remoteAttributeNS',\r\n    /**\r\n     * @this {Element}\r\n     * @param {?string} namespace\r\n     * @param {string} name\r\n     */\r\n    function(namespace, name) {\r\n      // Fast path for non-custom elements.\r\n      if (this.__CE_state !== CEState.custom) {\r\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\r\n      }\r\n\r\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\r\n      Native.Element_removeAttributeNS.call(this, namespace, name);\r\n      if (oldValue !== null) {\r\n        internals.attributeChangedCallback(this, name, oldValue, null, namespace);\r\n      }\r\n    });\r\n\r\n  Utilities.setPropertyUnchecked(Element.prototype, 'insertAdjacentElement',\r\n    /**\r\n     * @this {Element}\r\n     * @param {string} where\r\n     * @param {!Element} element\r\n     * @return {?Element}\r\n     */\r\n    function(where, element) {\r\n      const wasConnected = Utilities.isConnected(element);\r\n      const insertedElement = /** @type {!Element} */\r\n        (Native.Element_insertAdjacentElement.call(this, where, element));\r\n\r\n      if (wasConnected) {\r\n        internals.disconnectTree(element);\r\n      }\r\n\r\n      if (Utilities.isConnected(insertedElement)) {\r\n        internals.connectTree(element);\r\n      }\r\n      return insertedElement;\r\n    });\r\n\r\n  PatchParentNode(internals, Element.prototype, {\r\n    prepend: Native.Element_prepend,\r\n    append: Native.Element_append,\r\n  });\r\n\r\n  PatchChildNode(internals, Element.prototype, {\r\n    before: Native.Element_before,\r\n    after: Native.Element_after,\r\n    replaceWith: Native.Element_replaceWith,\r\n    remove: Native.Element_remove,\r\n  });\r\n};\r\n"]}