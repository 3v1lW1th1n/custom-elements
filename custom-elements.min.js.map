{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Environment.js","src/EnvironmentProxy.js","src/CustomElementInternals.js","src/Utilities.js","src/CustomElementState.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","getDescriptor$$module$$src$Environment","o","p","Object","getOwnPropertyDescriptor","envDocument_proto","window","envDocument","append","getDescriptor","prepend","envElement_proto","envElement","after","attachShadow","before","innerHTML","insertAdjacentElement","remove","replaceWith","envHTMLElement_proto","envHTMLElement","envHTMLTemplateElement","HTMLTemplateElement$$module$$src$Environment.content","envHTMLTemplateElement_proto","envMutationObserver","envMutationObserver_proto","envNode_proto","envNode","textContent","getter$$module$$src$EnvironmentProxy","descriptor","get","undefined","method$$module$$src$EnvironmentProxy","value","createElementMethod","method","createElement","createElementNSMethod","createElementNS","createTextNodeMethod","createTextNode","importNodeMethod","importNode","readyStateGetter","getter","readyState","attachShadowMethod","Element$$module$$src$Environment.attachShadow","getAttributeMethod","getAttribute","getAttributeNSMethod","getAttributeNS","localNameGetter","localName","removeAttributeMethod","removeAttribute","removeAttributeNSMethod","removeAttributeNS","setAttributeMethod","setAttribute","setAttributeNSMethod","setAttributeNS","contentGetter","observeMethod","observe","disconnectMethod","disconnect","addedNodesGetter","addedNodes","envMutationRecord","envMutationRecord_proto","addEventListenerMethod","addEventListener","addEventListener$$module$$src$EnvironmentProxy","node","callback","call","type","options","appendChildMethod","appendChild","childNodesGetter","childNodes","cloneNodeMethod","cloneNode","firstChildGetter","firstChild","insertBeforeMethod","insertBefore","isConnectedGetter","isConnected","nextSiblingGetter","nextSibling","nodeTypeGetter","nodeType","parentNodeGetter","parentNode","removeChildMethod","removeChild","replaceChildMethod","replaceChild","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","nativeValue","current","__CE_isImportDocument","Document","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","visitedImports","Node","ELEMENT_NODE","element","name","import","add","child","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","constructor","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","patch","__CE_patched","i","length","connectTree","elements","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","gatherElements","__CE_hasRegistry","__CE_documentLoadHandled","delete","localNameToDefinition","constructionStack","result","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","oldValue","newValue","namespace","indexOf","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","_handleMutations","bind","childList","subtree","mutations","j","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_unflushedLocalNames","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","_flush","shift","deferred","whenDefined","reject","prior","polyfillWrapFlushCallback","outer","inner","flush","$jscompDefaultExport$$module$$src$Patch$HTMLElement","HTMLElement","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","apply","Element","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","NS_HTML","Document$$module$$src$Environment.prepend","Document$$module$$src$Environment.append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","nodeWasConnected","ownerDocument","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","Node$$module$$src$Environment.textContent","Node$$module$$src$Environment.textContent.get","parts","join","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","Element$$module$$src$Environment.before","Element$$module$$src$Environment.after","Element$$module$$src$Environment.replaceWith","Element$$module$$src$Environment.remove","wasConnected","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","init","console","warn","Element$$module$$src$Environment.innerHTML","Element$$module$$src$Environment.innerHTML.get","HTMLElement$$module$$src$Environment.innerHTML","HTMLElement$$module$$src$Environment.innerHTML.get","rawDiv","content","HTMLElement$$module$$src$Environment.insertAdjacentElement","HTMLElement$$module$$src$Environment.insertAdjacentElement.value","Element$$module$$src$Environment.insertAdjacentElement","Element$$module$$src$Environment.insertAdjacentElement.value","Element$$module$$src$Environment.prepend","Element$$module$$src$Environment.append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const getDescriptor = (o, p) => Object.getOwnPropertyDescriptor(o, p);\n\nconst envDocument = window['Document'];\nconst envDocument_proto = envDocument['prototype'];\nexport const Document = {\n  self: envDocument,\n  // Closure's renaming breaks if this property is named `prototype`.\n  proto: envDocument_proto,\n\n  append: getDescriptor(envDocument_proto, 'append'),\n  createElement: getDescriptor(envDocument_proto, 'createElement'),\n  createElementNS: getDescriptor(envDocument_proto, 'createElementNS'),\n  createTextNode: getDescriptor(envDocument_proto, 'createTextNode'),\n  importNode: getDescriptor(envDocument_proto, 'importNode'),\n  prepend: getDescriptor(envDocument_proto, 'prepend'),\n  readyState: getDescriptor(envDocument_proto, 'readyState'),\n};\n\nconst envElement = window['Element'];\nconst envElement_proto = envElement['prototype'];\nexport const Element = {\n  self: envElement,\n  proto: envElement_proto,\n\n  after: getDescriptor(envElement_proto, 'after'),\n  append: getDescriptor(envElement_proto, 'append'),\n  attachShadow: getDescriptor(envElement_proto, 'attachShadow'),\n  before: getDescriptor(envElement_proto, 'before'),\n  getAttribute: getDescriptor(envElement_proto, 'getAttribute'),\n  getAttributeNS: getDescriptor(envElement_proto, 'getAttributeNS'),\n  innerHTML: getDescriptor(envElement_proto, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(envElement_proto, 'insertAdjacentElement'),\n  localName: getDescriptor(envElement_proto, 'localName'),\n  prepend: getDescriptor(envElement_proto, 'prepend'),\n  remove: getDescriptor(envElement_proto, 'remove'),\n  removeAttribute: getDescriptor(envElement_proto, 'removeAttribute'),\n  removeAttributeNS: getDescriptor(envElement_proto, 'removeAttributeNS'),\n  replaceWith: getDescriptor(envElement_proto, 'replaceWith'),\n  setAttribute: getDescriptor(envElement_proto, 'setAttribute'),\n  setAttributeNS: getDescriptor(envElement_proto, 'setAttributeNS'),\n};\n\nconst envHTMLElement = window['HTMLElement'];\nconst envHTMLElement_proto = envHTMLElement['prototype'];\nexport const HTMLElement = {\n  self: envHTMLElement,\n  proto: envHTMLElement_proto,\n\n  innerHTML: getDescriptor(envHTMLElement_proto, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(envHTMLElement_proto, 'insertAdjacentElement'),\n};\n\nexport const HTMLTemplateElement = {};\nconst envHTMLTemplateElement = window['HTMLTemplateElement'];\nif (envHTMLTemplateElement) {\n  const envHTMLTemplateElement_proto = envHTMLTemplateElement['prototype'];\n  HTMLTemplateElement.self = envHTMLTemplateElement;\n  HTMLTemplateElement.proto = envHTMLTemplateElement_proto;\n  HTMLTemplateElement.content = getDescriptor(envHTMLTemplateElement_proto, 'content');\n}\n\nconst envMutationObserver = window['MutationObserver'];\nconst envMutationObserver_proto = envMutationObserver['prototype'];\nexport const MutationObserver = {\n  self: envMutationObserver,\n  proto: envMutationObserver_proto,\n\n  disconnect: getDescriptor(envMutationObserver_proto, 'disconnect'),\n  observe: getDescriptor(envMutationObserver_proto, 'observe'),\n};\n\nconst envMutationRecord = window['MutationRecord'];\nconst envMutationRecord_proto = envMutationRecord['prototype'];\nexport const MutationRecord = {\n  self: envMutationRecord,\n  proto: envMutationRecord_proto,\n\n  addedNodes: getDescriptor(envMutationRecord_proto, 'addedNodes'),\n};\n\nconst envNode = window['Node'];\nconst envNode_proto = envNode['prototype'];\nexport const Node = {\n  self: envNode,\n  proto: envNode_proto,\n\n  addEventListener: getDescriptor(envNode_proto, 'addEventListener'),\n  appendChild: getDescriptor(envNode_proto, 'appendChild'),\n  childNodes: getDescriptor(envNode_proto, 'childNodes'),\n  cloneNode: getDescriptor(envNode_proto, 'cloneNode'),\n  firstChild: getDescriptor(envNode_proto, 'firstChild'),\n  insertBefore: getDescriptor(envNode_proto, 'insertBefore'),\n  isConnected: getDescriptor(envNode_proto, 'isConnected'),\n  nextSibling: getDescriptor(envNode_proto, 'nextSibling'),\n  nodeType: getDescriptor(envNode_proto, 'nodeType'),\n  parentNode: getDescriptor(envNode_proto, 'parentNode'),\n  removeChild: getDescriptor(envNode_proto, 'removeChild'),\n  replaceChild: getDescriptor(envNode_proto, 'replaceChild'),\n  textContent: getDescriptor(envNode_proto, 'textContent'),\n};\n","import * as Env from './Environment.js';\n\nconst getter = descriptor => descriptor ? descriptor.get : () => undefined;\nconst method = descriptor => descriptor ? descriptor.value : () => undefined;\n\n// Document\n\nconst createElementMethod = method(Env.Document.createElement);\nexport const createElement = (doc, localName) => createElementMethod.call(doc, localName);\n\nconst createElementNSMethod = method(Env.Document.createElementNS);\nexport const createElementNS = (doc, namespace, qualifiedName) => createElementNSMethod.call(doc, namespace, qualifiedName);\n\nconst createTextNodeMethod = method(Env.Document.createTextNode);\nexport const createTextNode = (doc, localName) => createTextNodeMethod.call(doc, localName);\n\nconst importNodeMethod = method(Env.Document.importNode);\nexport const importNode = (doc, node, deep) => importNodeMethod.call(doc, node, deep);\n\nconst readyStateGetter = getter(Env.Document.readyState);\nexport const readyState = doc => readyStateGetter.call(doc);\n\n// Element\n\nconst attachShadowMethod = method(Env.Element.attachShadow);\nexport const attachShadow = (node, options) => attachShadowMethod.call(node, options);\n\nconst getAttributeMethod = method(Env.Element.getAttribute);\nexport const getAttribute = (node, name) => getAttributeMethod.call(node, name);\n\nconst getAttributeNSMethod = method(Env.Element.getAttributeNS);\nexport const getAttributeNS = (node, ns, name) => getAttributeNSMethod.call(node, ns, name);\n\nconst localNameGetter = getter(Env.Element.localName);\nexport const localName = node => localNameGetter.call(node);\n\nconst removeAttributeMethod = method(Env.Element.removeAttribute);\nexport const removeAttribute = (node, name) => removeAttributeMethod.call(node, name);\n\nconst removeAttributeNSMethod = method(Env.Element.removeAttributeNS);\nexport const removeAttributeNS = (node, ns, name) => removeAttributeNSMethod.call(node, ns, name);\n\nconst setAttributeMethod = method(Env.Element.setAttribute);\nexport const setAttribute = (node, name, value) => setAttributeMethod.call(node, name, value);\n\nconst setAttributeNSMethod = method(Env.Element.setAttributeNS);\nexport const setAttributeNS = (node, ns, name, value) => setAttributeNSMethod.call(node, ns, name, value);\n\n// HTMLTemplateElement\n\nconst contentGetter = getter(Env.HTMLTemplateElement.content);\nexport const content = node => contentGetter.call(node);\n\n// MutationObserver\n\nconst observeMethod = method(Env.MutationObserver.observe);\nexport const observe = (mutationObserver, target, options) => observeMethod.call(mutationObserver, target, options);\n\nconst disconnectMethod = method(Env.MutationObserver.disconnect);\nexport const disconnect = mutationObserver => disconnectMethod.call(mutationObserver);\n\n// MutationRecord\n\nconst addedNodesGetter = getter(Env.MutationRecord.addedNodes);\nexport const addedNodes = node => addedNodesGetter.call(node);\n\n// Node\n\nconst addEventListenerMethod = method(Env.Node.addEventListener);\nexport const addEventListener = (node, type, callback, options) => addEventListenerMethod.call(node, type, callback, options);\n\nconst appendChildMethod = method(Env.Node.appendChild);\nexport const appendChild = (node, deep) => appendChildMethod.call(node, deep);\n\nconst childNodesGetter = getter(Env.Node.childNodes);\nexport const childNodes = node => childNodesGetter.call(node);\n\nconst cloneNodeMethod = method(Env.Node.cloneNode);\nexport const cloneNode = (node, deep) => cloneNodeMethod.call(node, deep);\n\nconst firstChildGetter = getter(Env.Node.firstChild);\nexport const firstChild = node => firstChildGetter.call(node);\n\nconst insertBeforeMethod = method(Env.Node.insertBefore);\nexport const insertBefore = (node, newChild, refChild) => insertBeforeMethod.call(node, newChild, refChild);\n\nconst isConnectedGetter = getter(Env.Node.isConnected);\nexport const isConnected = node => isConnectedGetter.call(node);\n\nconst nextSiblingGetter = getter(Env.Node.nextSibling);\nexport const nextSibling = node => nextSiblingGetter.call(node);\n\nconst nodeTypeGetter = getter(Env.Node.nodeType);\nexport const nodeType = node => nodeTypeGetter.call(node);\n\nconst parentNodeGetter = getter(Env.Node.parentNode);\nexport const parentNode = node => parentNodeGetter.call(node);\n\nconst removeChildMethod = method(Env.Node.removeChild);\nexport const removeChild = (node, deep) => removeChildMethod.call(node, deep);\n\nconst replaceChildMethod = method(Env.Node.replaceChild);\nexport const replaceChild = (node, newChild, oldChild) => replaceChildMethod.call(node, newChild, oldChild);\n","import * as EnvProxy from './EnvironmentProxy.js';\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const elements = [];\n\n    const gatherElements = element => {\n      if (EnvProxy.localName(element) === 'link' && EnvProxy.getAttribute(element, 'rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          EnvProxy.addEventListener(element, 'load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      this.upgradeElement(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = EnvProxy.getAttribute(element, name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import * as EnvProxy from './EnvironmentProxy.js';\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = EnvProxy.isConnected(node);\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = EnvProxy.parentNode(current) || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !EnvProxy.nextSibling(node)) {\n    node = EnvProxy.parentNode(node);\n  }\n  return (!node || node === root) ? null : EnvProxy.nextSibling(node);\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return EnvProxy.firstChild(start) || nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (EnvProxy.nodeType(node) === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = EnvProxy.localName(element);\n      if (localName === 'link' && EnvProxy.getAttribute(element, 'rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = EnvProxy.firstChild(importNode); child; child = EnvProxy.nextSibling(child)) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = EnvProxy.firstChild(shadowRoot); child; child = EnvProxy.nextSibling(child)) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import * as Env from './Environment.js';\nimport * as EnvProxy from './EnvironmentProxy.js';\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (EnvProxy.readyState(this._document) === 'loading') {\n      this._observer = new Env.MutationObserver.self(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      EnvProxy.observe(this._observer, this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      EnvProxy.disconnect(this._observer);\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = EnvProxy.readyState(this._document);\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = EnvProxy.addedNodes(mutations[i]);\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    this._unflushedLocalNames.push(localName);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n\n    this._flushPending = false;\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._unflushedLocalNames.length > 0) {\n      const localName = this._unflushedLocalNames.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","import * as Env from '../Environment.js';\nimport * as EnvProxy from '../EnvironmentProxy.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = EnvProxy.createElement(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Env.HTMLElement.proto;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import * as Env from '../Environment.js';\nimport * as EnvProxy from '../EnvironmentProxy.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (EnvProxy.createElement(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = EnvProxy.importNode(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (EnvProxy.createElementNS(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: (Env.Document.prepend || {}).value,\n    append: (Env.Document.append || {}).value,\n  });\n};\n","import * as Env from '../Environment.js';\nimport * as EnvProxy from '../EnvironmentProxy.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(EnvProxy.childNodes(node));\n        const nativeResult = EnvProxy.insertBefore(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = EnvProxy.insertBefore(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(EnvProxy.childNodes(node));\n        const nativeResult = EnvProxy.appendChild(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = EnvProxy.appendChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = EnvProxy.cloneNode(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = EnvProxy.removeChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(EnvProxy.childNodes(nodeToInsert));\n        const nativeResult = EnvProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = EnvProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (EnvProxy.firstChild(this)) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = EnvProxy.childNodes(this);\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Env.Node.textContent && Env.Node.textContent.get) {\n    patch_textContent(Node.prototype, Env.Node.textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          const childNodes = EnvProxy.childNodes(this);\n          for (let i = 0; i < childNodes.length; i++) {\n            parts.push(childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          let child;\n          while (child = EnvProxy.firstChild(this)) {\n            EnvProxy.removeChild(this, child);\n          }\n          EnvProxy.appendChild(this, EnvProxy.createTextNode(document, assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import * as Env from '../Environment.js';\nimport * as EnvProxy from '../EnvironmentProxy.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Env.Element.attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = EnvProxy.attachShadow(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Env.Element.innerHTML && Env.Element.innerHTML.get) {\n    patch_innerHTML(Element.prototype, Env.Element.innerHTML);\n  } else if (Env.HTMLElement.innerHTML && Env.HTMLElement.innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Env.HTMLElement.innerHTML);\n  } else {\n    // In this case, `innerHTML` has no exposed getter but still exists. Rather\n    // than using the environment proxy, we have to get and set it directly.\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = EnvProxy.createElement(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return EnvProxy.cloneNode(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content =\n            (EnvProxy.localName(this) === 'template')\n            ? EnvProxy.content(/** @type {!HTMLTemplateElement} */ (this))\n            : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (EnvProxy.childNodes(content).length > 0) {\n            EnvProxy.removeChild(content, content.childNodes[0]);\n          }\n          while (EnvProxy.childNodes(rawDiv).length > 0) {\n            EnvProxy.appendChild(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return EnvProxy.setAttribute(this, name, newValue);\n      }\n\n      const oldValue = EnvProxy.getAttribute(this, name);\n      EnvProxy.setAttribute(this, name, newValue);\n      newValue = EnvProxy.getAttribute(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return EnvProxy.setAttributeNS(this, namespace, name, newValue);\n      }\n\n      const oldValue = EnvProxy.getAttributeNS(this, namespace, name);\n      EnvProxy.setAttributeNS(this, namespace, name, newValue);\n      newValue = EnvProxy.getAttributeNS(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return EnvProxy.removeAttribute(this, name);\n      }\n\n      const oldValue = EnvProxy.getAttribute(this, name);\n      EnvProxy.removeAttribute(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return EnvProxy.removeAttributeNS(this, namespace, name);\n      }\n\n      const oldValue = EnvProxy.getAttributeNS(this, namespace, name);\n      EnvProxy.removeAttributeNS(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = EnvProxy.getAttributeNS(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Env.HTMLElement.insertAdjacentElement && Env.HTMLElement.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Env.HTMLElement.insertAdjacentElement.value);\n  } else if (Env.Element.insertAdjacentElement && Env.Element.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(Element.prototype, Env.Element.insertAdjacentElement.value);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: (Env.Element.prepend || {}).value,\n    append: (Env.Element.append || {}).value,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: (Env.Element.before || {}).value,\n    after: (Env.Element.after || {}).value,\n    replaceWith: (Env.Element.replaceWith || {}).value,\n    remove: (Env.Element.remove || {}).value,\n  });\n};\n"]}