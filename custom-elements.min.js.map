{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Environment/Utilities.js","src/Environment/Document.js","src/Environment/Element.js","src/Environment/HTMLLinkElement.js","src/Environment/Node.js","src/CustomElementInternals.js","src/Utilities.js","src/CustomElementState.js","src/Environment/MutationObserver.js","src/Environment/MutationRecord.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Environment/HTMLElement.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Environment/HTMLTemplateElement.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","getDescriptor$$module$$src$Environment$Utilities","o","p","Object","getOwnPropertyDescriptor","getter$$module$$src$Environment$Utilities","descriptor","fallback","get","method$$module$$src$Environment$Utilities","value","undefined","constructor","window","prototype","append","getDescriptor","prepend","createElementMethod","method","createElement","createElementNSMethod","createElementNS","createTextNodeMethod","createTextNode","importNodeMethod","importNode","readyStateGetter","getter","readyState","module$$src$Environment$Document","after","attachShadow","before","innerHTML","insertAdjacentElement","remove","replaceWith","attachShadowMethod","descriptors$$module$$src$Environment$Element.attachShadow","getAttributeMethod","getAttribute","getAttributeNSMethod","getAttributeNS","localNameGetter","localName","removeAttributeMethod","removeAttribute","removeAttributeNSMethod","removeAttributeNS","setAttributeMethod","setAttribute","setAttributeNSMethod","setAttributeNS","module$$src$Environment$Element","importGetter","import","textContent","addEventListenerMethod","addEventListener","appendChildMethod","appendChild","childNodesGetter","childNodes","cloneNodeMethod","cloneNode","firstChildGetter","firstChild","insertBeforeMethod","insertBefore","isConnectedGetter","isConnected","nextSiblingGetter","nextSibling","nodeTypeGetter","nodeType","ownerDocumentGetter","ownerDocument","parentNodeGetter","parentNode","removeChildMethod","removeChild","replaceChildMethod","replaceChild","node","callback","call","type","options","module$$src$Environment$Node","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","nativeValue","current","__CE_isImportDocument","Document","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","visitedImports","Node","ELEMENT_NODE","element","name","add","child","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","patch","__CE_patched","i","length","connectTree","elements","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","upgrade","gatherElements","__CE_hasRegistry","proxy$$module$$src$Environment$Node.addEventListener","__CE_documentLoadHandled","delete","localNameToDefinition","constructionStack","result","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","oldValue","newValue","namespace","indexOf","disconnectMethod","disconnect","observeMethod","observe","addedNodesGetter","addedNodes","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","_handleMutations","bind","childList","subtree","mutations","j","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_pendingDefinitions","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","shift","pendingUpgradableElements","deferred","whenDefined","reject","prior","some","d","polyfillWrapFlushCallback","outer","inner","flush","module$$src$Environment$HTMLElement","$jscompDefaultExport$$module$$src$Patch$HTMLElement","HTMLElement","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","apply","Element","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","NS_HTML","descriptors$$module$$src$Environment$Document.prepend","descriptors$$module$$src$Environment$Document.append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","nodeWasConnected","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","descriptors$$module$$src$Environment$Node.textContent","descriptors$$module$$src$Environment$Node.textContent.get","parts","join","contentGetter","content","descriptors","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","descriptors$$module$$src$Environment$Element.before","descriptors$$module$$src$Environment$Element.after","descriptors$$module$$src$Environment$Element.replaceWith","descriptors$$module$$src$Environment$Element.remove","wasConnected","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","init","console","warn","descriptors$$module$$src$Environment$Element.innerHTML","descriptors$$module$$src$Environment$Element.innerHTML.get","descriptors$$module$$src$Environment$HTMLElement.innerHTML","descriptors$$module$$src$Environment$HTMLElement.innerHTML.get","rawDiv","descriptors$$module$$src$Environment$HTMLElement.insertAdjacentElement","descriptors$$module$$src$Environment$HTMLElement.insertAdjacentElement.value","descriptors$$module$$src$Environment$Element.insertAdjacentElement","descriptors$$module$$src$Environment$Element.insertAdjacentElement.value","descriptors$$module$$src$Environment$Element.prepend","descriptors$$module$$src$Environment$Element.append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","export const getDescriptor = (o, p) => Object.getOwnPropertyDescriptor(o, p);\nexport const getter = (descriptor, fallback) => descriptor && descriptor.get ? descriptor.get : fallback;\nexport const method = descriptor => descriptor ? descriptor.value : () => undefined;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Document'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  append: getDescriptor(prototype, 'append'),\n  createElement: getDescriptor(prototype, 'createElement'),\n  createElementNS: getDescriptor(prototype, 'createElementNS'),\n  createTextNode: getDescriptor(prototype, 'createTextNode'),\n  importNode: getDescriptor(prototype, 'importNode'),\n  prepend: getDescriptor(prototype, 'prepend'),\n  readyState: getDescriptor(prototype, 'readyState'),\n};\n\nconst createElementMethod = method(descriptors.createElement);\nconst createElementNSMethod = method(descriptors.createElementNS);\nconst createTextNodeMethod = method(descriptors.createTextNode);\nconst importNodeMethod = method(descriptors.importNode);\nconst readyStateGetter = getter(descriptors.readyState, function() { return this.readyState; });\n\nexport const proxy = {\n  createElement: (doc, localName) => createElementMethod.call(doc, localName),\n  createElementNS: (doc, namespace, qualifiedName) => createElementNSMethod.call(doc, namespace, qualifiedName),\n  createTextNode: (doc, localName) => createTextNodeMethod.call(doc, localName),\n  importNode: (doc, node, deep) => importNodeMethod.call(doc, node, deep),\n  readyState: doc => readyStateGetter.call(doc),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Element'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  after: getDescriptor(prototype, 'after'),\n  append: getDescriptor(prototype, 'append'),\n  attachShadow: getDescriptor(prototype, 'attachShadow'),\n  before: getDescriptor(prototype, 'before'),\n  getAttribute: getDescriptor(prototype, 'getAttribute'),\n  getAttributeNS: getDescriptor(prototype, 'getAttributeNS'),\n  innerHTML: getDescriptor(prototype, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(prototype, 'insertAdjacentElement'),\n  localName: getDescriptor(prototype, 'localName'),\n  prepend: getDescriptor(prototype, 'prepend'),\n  remove: getDescriptor(prototype, 'remove'),\n  removeAttribute: getDescriptor(prototype, 'removeAttribute'),\n  removeAttributeNS: getDescriptor(prototype, 'removeAttributeNS'),\n  replaceWith: getDescriptor(prototype, 'replaceWith'),\n  setAttribute: getDescriptor(prototype, 'setAttribute'),\n  setAttributeNS: getDescriptor(prototype, 'setAttributeNS'),\n};\n\nconst attachShadowMethod = method(descriptors.attachShadow);\nconst getAttributeMethod = method(descriptors.getAttribute);\nconst getAttributeNSMethod = method(descriptors.getAttributeNS);\nconst localNameGetter = getter(descriptors.localName, function() { return this.localName; });\nconst removeAttributeMethod = method(descriptors.removeAttribute);\nconst removeAttributeNSMethod = method(descriptors.removeAttributeNS);\nconst setAttributeMethod = method(descriptors.setAttribute);\nconst setAttributeNSMethod = method(descriptors.setAttributeNS);\n\nexport const proxy = {\n  attachShadow: (node, options) => attachShadowMethod.call(node, options),\n  getAttribute: (node, name) => getAttributeMethod.call(node, name),\n  getAttributeNS: (node, ns, name) => getAttributeNSMethod.call(node, ns, name),\n  localName: node => localNameGetter.call(node),\n  removeAttribute: (node, name) => removeAttributeMethod.call(node, name),\n  removeAttributeNS: (node, ns, name) => removeAttributeNSMethod.call(node, ns, name),\n  setAttribute: (node, name, value) => setAttributeMethod.call(node, name, value),\n  setAttributeNS: (node, ns, name, value) => setAttributeNSMethod.call(node, ns, name, value),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLLinkElement'];\nexport const prototype = constructor ? constructor['prototype'] : undefined;\n\nexport const descriptors = {\n  import: getDescriptor(prototype, 'import'),\n};\n\nconst importGetter = getter(descriptors.import, function() { return this.import; });\n\nexport const proxy = {\n  import: node => importGetter.call(node),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Node'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  addEventListener: getDescriptor(prototype, 'addEventListener'),\n  appendChild: getDescriptor(prototype, 'appendChild'),\n  childNodes: getDescriptor(prototype, 'childNodes'),\n  cloneNode: getDescriptor(prototype, 'cloneNode'),\n  firstChild: getDescriptor(prototype, 'firstChild'),\n  insertBefore: getDescriptor(prototype, 'insertBefore'),\n  isConnected: getDescriptor(prototype, 'isConnected'),\n  nextSibling: getDescriptor(prototype, 'nextSibling'),\n  nodeType: getDescriptor(prototype, 'nodeType'),\n  ownerDocument: getDescriptor(prototype, 'ownerDocument'),\n  parentNode: getDescriptor(prototype, 'parentNode'),\n  removeChild: getDescriptor(prototype, 'removeChild'),\n  replaceChild: getDescriptor(prototype, 'replaceChild'),\n  textContent: getDescriptor(prototype, 'textContent'),\n};\n\nconst addEventListenerMethod = method(descriptors.addEventListener);\nconst appendChildMethod = method(descriptors.appendChild);\nconst childNodesGetter = getter(descriptors.childNodes, function() { return this.childNodes; });\nconst cloneNodeMethod = method(descriptors.cloneNode);\nconst firstChildGetter = getter(descriptors.firstChild, function() { return this.firstChild; });\nconst insertBeforeMethod = method(descriptors.insertBefore);\nconst isConnectedGetter = getter(descriptors.isConnected, function() { return this.isConnected; });\nconst nextSiblingGetter = getter(descriptors.nextSibling, function() { return this.nextSibling; });\nconst nodeTypeGetter = getter(descriptors.nodeType, function() { return this.nodeType; });\nconst ownerDocumentGetter = getter(descriptors.ownerDocument, function() { return this.ownerDocument; });\nconst parentNodeGetter = getter(descriptors.parentNode, function() { return this.parentNode; });\nconst removeChildMethod = method(descriptors.removeChild);\nconst replaceChildMethod = method(descriptors.replaceChild);\n\nexport const proxy = {\n  addEventListener: (node, type, callback, options) => addEventListenerMethod.call(node, type, callback, options),\n  appendChild: (node, deep) => appendChildMethod.call(node, deep),\n  childNodes: node => childNodesGetter.call(node),\n  cloneNode: (node, deep) => cloneNodeMethod.call(node, deep),\n  firstChild: node => firstChildGetter.call(node),\n  insertBefore: (node, newChild, refChild) => insertBeforeMethod.call(node, newChild, refChild),\n  isConnected: node => isConnectedGetter.call(node),\n  nextSibling: node => nextSiblingGetter.call(node),\n  nodeType: node => nodeTypeGetter.call(node),\n  ownerDocument: node => ownerDocumentGetter.call(node),\n  parentNode: node => parentNodeGetter.call(node),\n  removeChild: (node, deep) => removeChildMethod.call(node, deep),\n  replaceChild: (node, newChild, oldChild) => replaceChildMethod.call(node, newChild, oldChild),\n};\n","import {constructor as DocumentCtor, proxy as DocumentProxy} from './Environment/Document.js';\nimport {proxy as ElementProxy} from './Environment/Element.js';\nimport {proxy as HTMLLinkElementProxy} from './Environment/HTMLLinkElement.js';\nimport {constructor as NodeCtor, proxy as NodeProxy} from './Environment/Node.js';\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (ElementProxy.localName(element) === 'link' &&\n          ElementProxy.getAttribute(element, 'rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (HTMLLinkElementProxy.import(element));\n        const readyState = importNode instanceof DocumentCtor\n          // Native HTML Imports.\n          ? DocumentProxy.readyState(importNode)\n          // HTML Imports polyfill.\n          : (importNode instanceof NodeCtor ? importNode.readyState : undefined);\n\n        if (readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          NodeProxy.addEventListener(element, 'load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const localName = ElementProxy.localName(element)\n    const definition = this.localNameToDefinition(localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = ElementProxy.getAttribute(element, name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import {proxy as ElementProxy} from './Environment/Element.js';\nimport {proxy as NodeProxy} from './Environment/Node.js';\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = NodeProxy.isConnected(node);\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = NodeProxy.parentNode(current) || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !NodeProxy.nextSibling(node)) {\n    node = NodeProxy.parentNode(node);\n  }\n  return (!node || node === root) ? null : NodeProxy.nextSibling(node);\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return NodeProxy.firstChild(start) || nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (NodeProxy.nodeType(node) === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = ElementProxy.localName(element);\n      if (localName === 'link' && ElementProxy.getAttribute(element, 'rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = NodeProxy.firstChild(importNode); child; child = NodeProxy.nextSibling(child)) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = NodeProxy.firstChild(shadowRoot); child; child = NodeProxy.nextSibling(child)) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['MutationObserver'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  disconnect: getDescriptor(prototype, 'disconnect'),\n  observe: getDescriptor(prototype, 'observe'),\n};\n\nconst disconnectMethod = method(descriptors.disconnect);\nconst observeMethod = method(descriptors.observe);\n\nexport const proxy = {\n  disconnect: mutationObserver => disconnectMethod.call(mutationObserver),\n  observe: (mutationObserver, target, options) => observeMethod.call(mutationObserver, target, options),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['MutationRecord'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  addedNodes: getDescriptor(prototype, 'addedNodes'),\n};\n\nconst addedNodesGetter = getter(descriptors.addedNodes, function() { return this.addedNodes; });\n\nexport const proxy = {\n  addedNodes: node => addedNodesGetter.call(node),\n};\n","import {proxy as DocumentProxy} from './Environment/Document.js';\nimport {constructor as MutationObserverCtor, proxy as MutationObserverProxy} from './Environment/MutationObserver.js';\nimport {proxy as MutationRecordProxy} from './Environment/MutationRecord.js';\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (DocumentProxy.readyState(this._document) === 'loading') {\n      this._observer = new MutationObserverCtor(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      MutationObserverProxy.observe(this._observer, this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      MutationObserverProxy.disconnect(this._observer);\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = DocumentProxy.readyState(this._document);\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = MutationRecordProxy.addedNodes(mutations[i]);\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\nimport { proxy as ElementProxy } from './Environment/Element.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!Element>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!Element>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = ElementProxy.localName(element);\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLElement'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  innerHTML: getDescriptor(prototype, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(prototype, 'insertAdjacentElement'),\n};\n\nexport const proxy = {};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {prototype as HTMLElementProto} from '../Environment/HTMLElement.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = DocumentProxy.createElement(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = HTMLElementProto;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import {\n  descriptors as DocumentDesc,\n  prototype as DocumentProto,\n  proxy as DocumentProxy,\n} from '../Environment/Document.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(DocumentProto, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (DocumentProxy.createElement(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(DocumentProto, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = DocumentProxy.importNode(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(DocumentProto, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (DocumentProxy.createElementNS(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, DocumentProto, {\n    prepend: (DocumentDesc.prepend || {}).value,\n    append: (DocumentDesc.append || {}).value,\n  });\n};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {\n  descriptors as NodeDesc,\n  prototype as NodeProto,\n  proxy as NodeProxy,\n} from '../Environment/Node.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(NodeProto, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(node));\n        const nativeResult = NodeProxy.insertBefore(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.insertBefore(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(node));\n        const nativeResult = NodeProxy.appendChild(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.appendChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = NodeProxy.cloneNode(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!NodeProxy.ownerDocument(this).__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.removeChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(nodeToInsert));\n        const nativeResult = NodeProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = NodeProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (NodeProxy.firstChild(this)) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = NodeProxy.childNodes(this);\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (NodeDesc.textContent && NodeDesc.textContent.get) {\n    patch_textContent(NodeProto, NodeDesc.textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          const childNodes = NodeProxy.childNodes(this);\n          for (let i = 0; i < childNodes.length; i++) {\n            parts.push(childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          let child;\n          while (child = NodeProxy.firstChild(this)) {\n            NodeProxy.removeChild(this, child);\n          }\n          NodeProxy.appendChild(this, DocumentProxy.createTextNode(document, assignedValue));\n        },\n      });\n    });\n  }\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLTemplateElement'];\nexport const prototype = constructor ? constructor['prototype'] : undefined;\n\nexport const descriptors = !prototype ? {} : {\n  content: getDescriptor(prototype, 'content'),\n};\n\nconst contentGetter = getter(descriptors.content, function() { return this.content; });\n\nexport const proxy = {\n  content: node => contentGetter.call(node),\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {\n  descriptors as ElementDesc,\n  prototype as ElementProto,\n  proxy as ElementProxy,\n} from '../Environment/Element.js';\nimport {\n  descriptors as HTMLElementDesc,\n  prototype as HTMLElementProto,\n} from '../Environment/HTMLElement.js';\nimport {proxy as HTMLTemplateElementProxy} from '../Environment/HTMLTemplateElement.js';\nimport {proxy as NodeProxy} from '../Environment/Node.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (ElementDesc.attachShadow) {\n    Utilities.setPropertyUnchecked(ElementProto, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = ElementProxy.attachShadow(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!NodeProxy.ownerDocument(this).__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (ElementDesc.innerHTML && ElementDesc.innerHTML.get) {\n    patch_innerHTML(ElementProto, ElementDesc.innerHTML);\n  } else if (HTMLElementDesc.innerHTML && HTMLElementDesc.innerHTML.get) {\n    patch_innerHTML(HTMLElementProto, HTMLElementDesc.innerHTML);\n  } else {\n    // In this case, `innerHTML` has no exposed getter but still exists. Rather\n    // than using the environment proxy, we have to get and set it directly.\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = DocumentProxy.createElement(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return NodeProxy.cloneNode(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content =\n            (ElementProxy.localName(this) === 'template')\n            ? HTMLTemplateElementProxy.content(/** @type {!HTMLTemplateElement} */ (this))\n            : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (NodeProxy.childNodes(content).length > 0) {\n            NodeProxy.removeChild(content, content.childNodes[0]);\n          }\n          while (NodeProxy.childNodes(rawDiv).length > 0) {\n            NodeProxy.appendChild(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(ElementProto, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.setAttribute(this, name, newValue);\n      }\n\n      const oldValue = ElementProxy.getAttribute(this, name);\n      ElementProxy.setAttribute(this, name, newValue);\n      newValue = ElementProxy.getAttribute(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(ElementProto, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.setAttributeNS(this, namespace, name, newValue);\n      }\n\n      const oldValue = ElementProxy.getAttributeNS(this, namespace, name);\n      ElementProxy.setAttributeNS(this, namespace, name, newValue);\n      newValue = ElementProxy.getAttributeNS(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(ElementProto, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.removeAttribute(this, name);\n      }\n\n      const oldValue = ElementProxy.getAttribute(this, name);\n      ElementProxy.removeAttribute(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(ElementProto, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.removeAttributeNS(this, namespace, name);\n      }\n\n      const oldValue = ElementProxy.getAttributeNS(this, namespace, name);\n      ElementProxy.removeAttributeNS(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = ElementProxy.getAttributeNS(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (HTMLElementDesc.insertAdjacentElement && HTMLElementDesc.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(HTMLElementProto, HTMLElementDesc.insertAdjacentElement.value);\n  } else if (ElementDesc.insertAdjacentElement && ElementDesc.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(ElementProto, ElementDesc.insertAdjacentElement.value);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, ElementProto, {\n    prepend: (ElementDesc.prepend || {}).value,\n    append: (ElementDesc.append || {}).value,\n  });\n\n  PatchChildNode(internals, ElementProto, {\n    before: (ElementDesc.before || {}).value,\n    after: (ElementDesc.after || {}).value,\n    replaceWith: (ElementDesc.replaceWith || {}).value,\n    remove: (ElementDesc.remove || {}).value,\n  });\n};\n"]}