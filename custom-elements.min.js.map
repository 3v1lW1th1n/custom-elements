{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Utilities.js","src/CustomElementReactionsStack.js","src/CustomElementInternals.js","src/CustomElementState.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Patch/Native.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","localName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","isConnected","node","nativeValue","undefined","current","__CE_isImportDocument","Document","parentNode","window","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","callback","visitedImports","nodeType","Node","ELEMENT_NODE","element","getAttribute","importNode","import","add","child","firstChild","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","name","value","constructor","CustomElementReactionsStack","_stack","_length","_queueStart","_queueCount","_processingTheBackupElementQueue","pushQueue","popQueue","stack","queueStart","queueEnd","i","__CE_queueFront","reaction","__CE_next","enqueueReaction","last","Promise","resolve","then","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","_reactionsStack","pushCEReactionsQueue","popCEReactionsQueue","setDefinition","definition","set","addPatch","listener","push","patchTree","patch","__CE_patched","length","connectTree","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","gatherElements","readyState","__CE_hasRegistry","addEventListener","__CE_documentLoadHandled","delete","upgradeElementSync","localNameToDefinition","get","constructionStack","result","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","call","oldValue","newValue","namespace","indexOf","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","_parserQueue","MutationObserver","_handleMutations","bind","observe","childList","subtree","disconnect","mutations","parserQueue","addedElementsCount","mutationsLength","addedNodes","j","addedNodesLength","Element","Deferred","_resolve","_value","_promise","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_unflushedLocalNames","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","Object","_flush","shift","deferred","whenDefined","reject","prior","polyfillWrapFlushCallback","outer","inner","flush","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","Node_textContent","getOwnPropertyDescriptor","Element_attachShadow","Element_innerHTML","Element_getAttribute","Element_setAttribute","setAttribute","Element_removeAttribute","removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$HTMLElement","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElement.call","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","prepend","apply","append","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","$jscompDefaultExport$$module$$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElementNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Document_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Document_append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","refNode","DocumentFragment","$jscompDefaultExport$$module$$src$Patch$Native.Node_insertBefore.call","nativeResult","$jscompDefaultExport$$module$$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_cloneNode.call","ownerDocument","$jscompDefaultExport$$module$$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","thisIsConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_replaceChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent.get","parts","childNodes","textContent","join","createTextNode","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","$jscompDefaultExport$$module$$src$Patch$Native.Element_before","$jscompDefaultExport$$module$$src$Patch$Native.Element_after","wasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Element_replaceWith","$jscompDefaultExport$$module$$src$Patch$Native.Element_remove","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","patch_insertAdjacentElement","baseMethod","where","insertedElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow.call","console","warn","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML.get","rawDiv","innerHTML","content","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Element_append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * https://html.spec.whatwg.org/#custom-element-reactions-stack\n *\n * Implements the custom element reactions stack. Thanks to @dominiccooney for\n * the single array and auto-generated backup queue ideas.\n */\nexport default class CustomElementReactionsStack {\n  constructor() {\n    /**\n     * @private\n     * @type {!Array<!Element|undefined>}\n     */\n    this._stack = [];\n\n    /**\n     * The total size of all element queues on the stack and the end index of\n     * the last queue.\n     * @private\n     * @type {number}\n     */\n    this._length = 0;\n\n    /**\n     * `_queueStart[i]` is the start index of queue `i` and the (exclusive) end\n     * index of queue `i - 1`.\n     * @private\n     * @type {!Array<number>}\n     */\n    this._queueStart = [];\n\n    /**\n     * The number of element queues currently on the stack.\n     * @private\n     * @type {number}\n     */\n    this._queueCount = 0;\n\n    /**\n     * True if a microtask to flush the backup element queue is scheduled but\n     * has not yet run.\n     * @private\n     * @type {boolean}\n     */\n    this._processingTheBackupElementQueue = false;\n  }\n\n  /**\n   * Pushes a new element queue onto the reactions stack. Must be called when\n   * entering any API marked with `CEReactions`.\n   *\n   * https://html.spec.whatwg.org/#cereactions\n   */\n  pushQueue() {\n    this._queueStart[this._queueCount++] = this._length;\n  }\n\n  /**\n   * Pops and flushes the top-most queue of the reactions stack. Must be called\n   * when entering any API marked with `CEReactions`.\n   */\n  popQueue() {\n    const stack = this._stack;\n    const queueStart = this._queueStart[--this._queueCount];\n    const queueEnd = this._length;\n\n    for (let i = queueStart; i < queueEnd; i++) {\n      const element = stack[i];\n      stack[i] = undefined;\n\n      // Drain the element's reaction queue.\n      while (element.__CE_queueFront) {\n        // This *must* be implemented by removing the first item of the reaction\n        // queue from the element rather than using `__CE_next` of the last\n        // reaction. A reaction may cause more reactions to be enqueued and the\n        // element's reaction queue to be flushed, so `__CE_next` of the last\n        // reaction may not actually point to the next reaction in the queue.\n        const reaction = element.__CE_queueFront;\n        element.__CE_queueFront = reaction.__CE_next;\n        reaction();\n      }\n    }\n\n    this._length = queueStart;\n  }\n\n  /**\n   * Enqueues a reaction for a given element and enqueue the element in the\n   * top-most element queue or the backup queue, if there are no element queues\n   * on the stack.\n   *\n   * Elements' reaction queues are stored a linked list of functions with the\n   * first stored on the element as `__CE_queueFront` and each following\n   * function on the previous one as `__CE_next`.\n   * @param {!Element} element\n   * @param {!Function} reaction\n   */\n  enqueueReaction(element, reaction) {\n    // Insert the reaction into the element's reaction queue.\n    if (element.__CE_queueFront) {\n      // The reaction queue doesn't seem to grow larger than one reaction very\n      // often. Maintaining a separate reference to the last reaction - which\n      // has to be checked at every enqueue / dequeue - ends up being more\n      // expensive than walking to the end in the uncommon case.\n      let last = element.__CE_queueFront;\n      while (last.__CE_next) {\n        last = last.__CE_next;\n      }\n      last.__CE_next = reaction;\n    } else {\n      element.__CE_queueFront = reaction;\n    }\n\n    // Insert the element into the top-most element queue or the backup queue,\n    // if there are none.\n    if (this._queueCount === 0) {\n      this.pushQueue();\n      this._stack[this._length++] = element;\n\n      if (this._processingTheBackupElementQueue) return;\n      this._processingTheBackupElementQueue = true;\n\n      Promise.resolve().then(() => {\n        this.popQueue();\n        this._processingTheBackupElementQueue = false;\n      });\n    } else {\n      this._stack[this._length++] = element;\n    }\n  }\n};\n","import * as Utilities from './Utilities';\nimport CEState from './CustomElementState';\nimport CustomElementReactionsStack from './CustomElementReactionsStack';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /**\n     * @private\n     * @type {!Map<string, !CustomElementDefinition>}\n     */\n    this._localNameToDefinition = new Map();\n\n    /**\n     * @private\n     * @type {!Map<!Function, !CustomElementDefinition>}\n     */\n    this._constructorToDefinition = new Map();\n\n    /**\n     * @private\n     * @type {!Array<!function(!Node)>}\n     */\n    this._patches = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._hasPatches = false;\n\n    /**\n     * @private\n     * @type {CustomElementReactionsStack}\n     */\n    this._reactionsStack = new CustomElementReactionsStack();\n  }\n\n  pushCEReactionsQueue() {\n    return this._reactionsStack.pushQueue();\n  }\n\n  popCEReactionsQueue() {\n    return this._reactionsStack.popQueue();\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    Utilities.walkDeepDescendantElements(root, element => {\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    });\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    Utilities.walkDeepDescendantElements(root, element => {\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    });\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.pushCEReactionsQueue();\n            this.patchAndUpgradeTree(importNode, visitedImports);\n            this.popCEReactionsQueue();\n          });\n        }\n      } else {\n        if (this._hasPatches) {\n          this.patch(element);\n        }\n        this.upgradeElement(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    if (element.__CE_state !== undefined) return;\n    this._reactionsStack.enqueueReaction(element, () => {\n      this.upgradeElementSync(element);\n    });\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElementSync(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          // This IIFE exists to prevent Closure from implementing the `for`\n          // scope around the two `const` variables as a new object for each\n          // iteration.\n          ((element, name, value) => {\n            this._reactionsStack.enqueueReaction(element, () => {\n              definition.attributeChangedCallback.call(element, name, null, value, null);\n            });\n          })(element, name, value);\n        }\n      }\n    }\n\n    if (definition.connectedCallback && Utilities.isConnected(element)) {\n      this._reactionsStack.enqueueReaction(element, () => {\n        definition.connectedCallback.call(element);\n      });\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      this._reactionsStack.enqueueReaction(element, () => {\n        definition.connectedCallback.call(element);\n      });\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      this._reactionsStack.enqueueReaction(element, () => {\n        definition.disconnectedCallback.call(element);\n      });\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      this._reactionsStack.enqueueReaction(element, () => {\n        definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n      });\n    }\n  }\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import CustomElementInternals from './CustomElementInternals';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n    /**\n     * @type {!Array<!Element|undefined>}\n     */\n    this._parserQueue = [];\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    // Release references to any elements in the queue.\n    this._parserQueue.length = 0;\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    const internals = this._internals;\n\n    const parserQueue = this._parserQueue;\n    let addedElementsCount = 0;\n\n    for (let i = 0, mutationsLength = mutations.length; i < mutationsLength; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0, addedNodesLength = addedNodes.length; j < addedNodesLength; j++) {\n        const node = addedNodes[j];\n        if (node instanceof Element) {\n          internals.patch(node);\n          parserQueue[addedElementsCount++] = node;\n        }\n      }\n    }\n\n    for (let i = 0; i < addedElementsCount; i++) {\n      const element = /** @type {!Element} */ (parserQueue[i]);\n\n      internals.pushCEReactionsQueue();\n      internals.upgradeElementSync(element);\n      internals.popCEReactionsQueue();\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals';\nimport DocumentConstructionObserver from './DocumentConstructionObserver';\nimport Deferred from './Deferred';\nimport * as Utilities from './Utilities';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    this._internals.pushCEReactionsQueue();\n\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      this._internals.popCEReactionsQueue();\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    this._unflushedLocalNames.push(localName);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n\n    this._internals.popCEReactionsQueue();\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    this._internals.pushCEReactionsQueue();\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._unflushedLocalNames.length > 0) {\n      const localName = this._unflushedLocalNames.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n\n    this._internals.popCEReactionsQueue();\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport CEState from '../CustomElementState';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals';\nimport CustomElementRegistry from './CustomElementRegistry';\n\nimport PatchHTMLElement from './Patch/HTMLElement';\nimport PatchDocument from './Patch/Document';\nimport PatchNode from './Patch/Node';\nimport PatchElement from './Patch/Element';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals';\nimport * as Utilities from '../../Utilities';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport * as Utilities from '../Utilities';\n\nimport PatchParentNode from './Interface/ParentNode';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      internals.pushCEReactionsQueue();\n\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n\n      internals.popCEReactionsQueue();\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport * as Utilities from '../Utilities';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      internals.pushCEReactionsQueue();\n\n      if (node instanceof DocumentFragment) {\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.connectTree(node);\n        }\n\n        const result = Native.Node_insertBefore.call(this, node, refNode);\n\n        internals.popCEReactionsQueue();\n        return result;\n      }\n\n\n      if (Utilities.isConnected(node)) {\n        internals.disconnectTree(node);\n      }\n\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (Utilities.isConnected(node)) {\n        internals.connectTree(node);\n      }\n\n      internals.popCEReactionsQueue();\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      internals.pushCEReactionsQueue();\n\n      if (node instanceof DocumentFragment) {\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.connectTree(node);\n        }\n\n        const result = Native.Node_appendChild.call(this, node);\n\n        internals.popCEReactionsQueue();\n        return result;\n      }\n\n\n      if (Utilities.isConnected(node)) {\n        internals.disconnectTree(node);\n      }\n\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (Utilities.isConnected(node)) {\n        internals.connectTree(node);\n      }\n\n      internals.popCEReactionsQueue();\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      internals.pushCEReactionsQueue();\n\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n\n      internals.popCEReactionsQueue();\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      internals.pushCEReactionsQueue();\n\n      if (Utilities.isConnected(node)) {\n        internals.disconnectTree(node);\n      }\n      const result = Native.Node_removeChild.call(this, node);\n\n      internals.popCEReactionsQueue();\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      internals.pushCEReactionsQueue();\n\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (nodeToInsert instanceof DocumentFragment) {\n        if (thisIsConnected) {\n          internals.disconnectTree(nodeToRemove);\n\n          // DocumentFragments can't be connected, so `disconnectTree` will\n          // never need to be called on a DocumentFragment's children after\n          // inserting it.\n\n          internals.connectTree(nodeToInsert);\n        }\n\n        const result = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        internals.popCEReactionsQueue();\n        return result;\n      }\n\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (Utilities.isConnected(nodeToInsert)) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      const result = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n      internals.popCEReactionsQueue();\n      return result;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        internals.pushCEReactionsQueue();\n\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          internals.popCEReactionsQueue();\n          return;\n        }\n\n        for (let child = this.firstChild; child; child = child.nextSibling) {\n          internals.disconnectTree(child);\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        internals.popCEReactionsQueue();\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals';\nimport * as Utilities from '../../Utilities';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport CEState from '../CustomElementState';\nimport * as Utilities from '../Utilities';\n\nimport PatchParentNode from './Interface/ParentNode';\nimport PatchChildNode from './Interface/ChildNode';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        internals.pushCEReactionsQueue();\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        if (Utilities.isConnected(this)) {\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this && element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n\n        internals.popCEReactionsQueue();\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n      /**\n       * @this {Element}\n       * @param {string} name\n       * @param {string} newValue\n       */\n      function(name, newValue) {\n        // Fast path for non-custom elements.\n        if (this.__CE_state !== CEState.custom) {\n          return Native.Element_setAttribute.call(this, name, newValue);\n        }\n\n        internals.pushCEReactionsQueue();\n\n        const oldValue = Native.Element_getAttribute.call(this, name);\n        Native.Element_setAttribute.call(this, name, newValue);\n        newValue = Native.Element_getAttribute.call(this, name);\n        if (oldValue !== newValue) {\n          internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n        }\n\n        internals.popCEReactionsQueue();\n      });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      internals.pushCEReactionsQueue();\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n\n      internals.popCEReactionsQueue();\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      internals.pushCEReactionsQueue();\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n\n      internals.popCEReactionsQueue();\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      internals.pushCEReactionsQueue();\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n\n      internals.popCEReactionsQueue();\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        internals.pushCEReactionsQueue();\n\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n\n        internals.popCEReactionsQueue();\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n"]}