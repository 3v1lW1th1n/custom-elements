{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Environment/Utilities.js","src/Environment/Element.js","src/Environment/Node.js","src/CustomElementInternals.js","src/Utilities.js","src/CustomElementState.js","src/Environment/Document.js","src/Environment/MutationObserver.js","src/Environment/MutationRecord.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Environment/HTMLElement.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Environment/HTMLTemplateElement.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","getDescriptor$$module$$src$Environment$Utilities","o","p","Object","getOwnPropertyDescriptor","getter$$module$$src$Environment$Utilities","descriptor","fallback","get","method$$module$$src$Environment$Utilities","value","undefined","prototype","window","constructor","after","getDescriptor","append","attachShadow","before","innerHTML","insertAdjacentElement","prepend","remove","replaceWith","attachShadowMethod","method","descriptors$$module$$src$Environment$Element.attachShadow","getAttributeMethod","getAttribute","getAttributeNSMethod","getAttributeNS","localNameGetter","getter","localName","removeAttributeMethod","removeAttribute","removeAttributeNSMethod","removeAttributeNS","setAttributeMethod","setAttribute","setAttributeNSMethod","setAttributeNS","module$$src$Environment$Element","textContent","addEventListenerMethod","addEventListener","appendChildMethod","appendChild","childNodesGetter","childNodes","cloneNodeMethod","cloneNode","firstChildGetter","firstChild","insertBeforeMethod","insertBefore","isConnectedGetter","isConnected","nextSiblingGetter","nextSibling","nodeTypeGetter","nodeType","parentNodeGetter","parentNode","removeChildMethod","removeChild","replaceChildMethod","replaceChild","node","callback","call","type","options","module$$src$Environment$Node","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","nativeValue","current","__CE_isImportDocument","Document","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","visitedImports","Node","ELEMENT_NODE","element","name","importNode","import","add","child","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","patch","__CE_patched","i","length","connectTree","elements","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","upgrade","gatherElements","readyState","__CE_hasRegistry","proxy$$module$$src$Environment$Node.addEventListener","__CE_documentLoadHandled","delete","localNameToDefinition","constructionStack","result","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","oldValue","newValue","namespace","indexOf","createElementMethod","createElement","createElementNSMethod","createElementNS","createTextNodeMethod","createTextNode","importNodeMethod","readyStateGetter","module$$src$Environment$Document","disconnectMethod","disconnect","observeMethod","observe","addedNodesGetter","addedNodes","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","_handleMutations","bind","childList","subtree","mutations","j","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_pendingDefinitions","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","shift","pendingUpgradableElements","deferred","whenDefined","reject","prior","some","d","polyfillWrapFlushCallback","outer","inner","flush","module$$src$Environment$HTMLElement","$jscompDefaultExport$$module$$src$Patch$HTMLElement","HTMLElement","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","apply","Element","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","NS_HTML","descriptors$$module$$src$Environment$Document.prepend","descriptors$$module$$src$Environment$Document.append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","nodeWasConnected","ownerDocument","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","descriptors$$module$$src$Environment$Node.textContent","descriptors$$module$$src$Environment$Node.textContent.get","parts","join","contentGetter","content","descriptors","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","descriptors$$module$$src$Environment$Element.before","descriptors$$module$$src$Environment$Element.after","descriptors$$module$$src$Environment$Element.replaceWith","descriptors$$module$$src$Environment$Element.remove","wasConnected","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","init","console","warn","descriptors$$module$$src$Environment$Element.innerHTML","descriptors$$module$$src$Environment$Element.innerHTML.get","descriptors$$module$$src$Environment$HTMLElement.innerHTML","descriptors$$module$$src$Environment$HTMLElement.innerHTML.get","rawDiv","descriptors$$module$$src$Environment$HTMLElement.insertAdjacentElement","descriptors$$module$$src$Environment$HTMLElement.insertAdjacentElement.value","descriptors$$module$$src$Environment$Element.insertAdjacentElement","descriptors$$module$$src$Environment$Element.insertAdjacentElement.value","descriptors$$module$$src$Environment$Element.prepend","descriptors$$module$$src$Environment$Element.append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","export const getDescriptor = (o, p) => Object.getOwnPropertyDescriptor(o, p);\nexport const getter = (descriptor, fallback) => descriptor && descriptor.get ? descriptor.get : fallback;\nexport const method = descriptor => descriptor ? descriptor.value : () => undefined;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Element'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  after: getDescriptor(prototype, 'after'),\n  append: getDescriptor(prototype, 'append'),\n  attachShadow: getDescriptor(prototype, 'attachShadow'),\n  before: getDescriptor(prototype, 'before'),\n  getAttribute: getDescriptor(prototype, 'getAttribute'),\n  getAttributeNS: getDescriptor(prototype, 'getAttributeNS'),\n  innerHTML: getDescriptor(prototype, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(prototype, 'insertAdjacentElement'),\n  localName: getDescriptor(prototype, 'localName'),\n  prepend: getDescriptor(prototype, 'prepend'),\n  remove: getDescriptor(prototype, 'remove'),\n  removeAttribute: getDescriptor(prototype, 'removeAttribute'),\n  removeAttributeNS: getDescriptor(prototype, 'removeAttributeNS'),\n  replaceWith: getDescriptor(prototype, 'replaceWith'),\n  setAttribute: getDescriptor(prototype, 'setAttribute'),\n  setAttributeNS: getDescriptor(prototype, 'setAttributeNS'),\n};\n\nconst attachShadowMethod = method(descriptors.attachShadow);\nconst getAttributeMethod = method(descriptors.getAttribute);\nconst getAttributeNSMethod = method(descriptors.getAttributeNS);\nconst localNameGetter = getter(descriptors.localName, function() { return this.localName; });\nconst removeAttributeMethod = method(descriptors.removeAttribute);\nconst removeAttributeNSMethod = method(descriptors.removeAttributeNS);\nconst setAttributeMethod = method(descriptors.setAttribute);\nconst setAttributeNSMethod = method(descriptors.setAttributeNS);\n\nexport const proxy = {\n  attachShadow: (node, options) => attachShadowMethod.call(node, options),\n  getAttribute: (node, name) => getAttributeMethod.call(node, name),\n  getAttributeNS: (node, ns, name) => getAttributeNSMethod.call(node, ns, name),\n  localName: node => localNameGetter.call(node),\n  removeAttribute: (node, name) => removeAttributeMethod.call(node, name),\n  removeAttributeNS: (node, ns, name) => removeAttributeNSMethod.call(node, ns, name),\n  setAttribute: (node, name, value) => setAttributeMethod.call(node, name, value),\n  setAttributeNS: (node, ns, name, value) => setAttributeNSMethod.call(node, ns, name, value),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Node'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  addEventListener: getDescriptor(prototype, 'addEventListener'),\n  appendChild: getDescriptor(prototype, 'appendChild'),\n  childNodes: getDescriptor(prototype, 'childNodes'),\n  cloneNode: getDescriptor(prototype, 'cloneNode'),\n  firstChild: getDescriptor(prototype, 'firstChild'),\n  insertBefore: getDescriptor(prototype, 'insertBefore'),\n  isConnected: getDescriptor(prototype, 'isConnected'),\n  nextSibling: getDescriptor(prototype, 'nextSibling'),\n  nodeType: getDescriptor(prototype, 'nodeType'),\n  parentNode: getDescriptor(prototype, 'parentNode'),\n  removeChild: getDescriptor(prototype, 'removeChild'),\n  replaceChild: getDescriptor(prototype, 'replaceChild'),\n  textContent: getDescriptor(prototype, 'textContent'),\n};\n\nconst addEventListenerMethod = method(descriptors.addEventListener);\nconst appendChildMethod = method(descriptors.appendChild);\nconst childNodesGetter = getter(descriptors.childNodes, function() { return this.childNodes; });\nconst cloneNodeMethod = method(descriptors.cloneNode);\nconst firstChildGetter = getter(descriptors.firstChild, function() { return this.firstChild; });\nconst insertBeforeMethod = method(descriptors.insertBefore);\nconst isConnectedGetter = getter(descriptors.isConnected, function() { return this.isConnected; });\nconst nextSiblingGetter = getter(descriptors.nextSibling, function() { return this.nextSibling; });\nconst nodeTypeGetter = getter(descriptors.nodeType, function() { return this.nodeType; });\nconst parentNodeGetter = getter(descriptors.parentNode, function() { return this.parentNode; });\nconst removeChildMethod = method(descriptors.removeChild);\nconst replaceChildMethod = method(descriptors.replaceChild);\n\nexport const proxy = {\n  addEventListener: (node, type, callback, options) => addEventListenerMethod.call(node, type, callback, options),\n  appendChild: (node, deep) => appendChildMethod.call(node, deep),\n  childNodes: node => childNodesGetter.call(node),\n  cloneNode: (node, deep) => cloneNodeMethod.call(node, deep),\n  firstChild: node => firstChildGetter.call(node),\n  insertBefore: (node, newChild, refChild) => insertBeforeMethod.call(node, newChild, refChild),\n  isConnected: node => isConnectedGetter.call(node),\n  nextSibling: node => nextSiblingGetter.call(node),\n  nodeType: node => nodeTypeGetter.call(node),\n  parentNode: node => parentNodeGetter.call(node),\n  removeChild: (node, deep) => removeChildMethod.call(node, deep),\n  replaceChild: (node, newChild, oldChild) => replaceChildMethod.call(node, newChild, oldChild),\n};\n","import {proxy as ElementProxy} from './Environment/Element.js';\nimport {constructor as NodeCtor, proxy as NodeProxy} from './Environment/Node.js';\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (ElementProxy.localName(element) === 'link' &&\n          ElementProxy.getAttribute(element, 'rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof NodeCtor && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          NodeProxy.addEventListener(element, 'load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = ElementProxy.getAttribute(element, name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import {proxy as ElementProxy} from './Environment/Element.js';\nimport {proxy as NodeProxy} from './Environment/Node.js';\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = NodeProxy.isConnected(node);\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = NodeProxy.parentNode(current) || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !NodeProxy.nextSibling(node)) {\n    node = NodeProxy.parentNode(node);\n  }\n  return (!node || node === root) ? null : NodeProxy.nextSibling(node);\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return NodeProxy.firstChild(start) || nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (NodeProxy.nodeType(node) === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = ElementProxy.localName(element);\n      if (localName === 'link' && ElementProxy.getAttribute(element, 'rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = NodeProxy.firstChild(importNode); child; child = NodeProxy.nextSibling(child)) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = NodeProxy.firstChild(shadowRoot); child; child = NodeProxy.nextSibling(child)) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Document'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  append: getDescriptor(prototype, 'append'),\n  createElement: getDescriptor(prototype, 'createElement'),\n  createElementNS: getDescriptor(prototype, 'createElementNS'),\n  createTextNode: getDescriptor(prototype, 'createTextNode'),\n  importNode: getDescriptor(prototype, 'importNode'),\n  prepend: getDescriptor(prototype, 'prepend'),\n  readyState: getDescriptor(prototype, 'readyState'),\n};\n\nconst createElementMethod = method(descriptors.createElement);\nconst createElementNSMethod = method(descriptors.createElementNS);\nconst createTextNodeMethod = method(descriptors.createTextNode);\nconst importNodeMethod = method(descriptors.importNode);\nconst readyStateGetter = getter(descriptors.readyState, function() { return this.readyState; });\n\nexport const proxy = {\n  createElement: (doc, localName) => createElementMethod.call(doc, localName),\n  createElementNS: (doc, namespace, qualifiedName) => createElementNSMethod.call(doc, namespace, qualifiedName),\n  createTextNode: (doc, localName) => createTextNodeMethod.call(doc, localName),\n  importNode: (doc, node, deep) => importNodeMethod.call(doc, node, deep),\n  readyState: doc => readyStateGetter.call(doc),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['MutationObserver'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  disconnect: getDescriptor(prototype, 'disconnect'),\n  observe: getDescriptor(prototype, 'observe'),\n};\n\nconst disconnectMethod = method(descriptors.disconnect);\nconst observeMethod = method(descriptors.observe);\n\nexport const proxy = {\n  disconnect: mutationObserver => disconnectMethod.call(mutationObserver),\n  observe: (mutationObserver, target, options) => observeMethod.call(mutationObserver, target, options),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['MutationRecord'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  addedNodes: getDescriptor(prototype, 'addedNodes'),\n};\n\nconst addedNodesGetter = getter(descriptors.addedNodes, function() { return this.addedNodes; });\n\nexport const proxy = {\n  addedNodes: node => addedNodesGetter.call(node),\n};\n","import {proxy as DocumentProxy} from './Environment/Document.js';\nimport {constructor as MutationObserverCtor, proxy as MutationObserverProxy} from './Environment/MutationObserver.js';\nimport {proxy as MutationRecordProxy} from './Environment/MutationRecord.js';\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (DocumentProxy.readyState(this._document) === 'loading') {\n      this._observer = new MutationObserverCtor(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      MutationObserverProxy.observe(this._observer, this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      MutationObserverProxy.disconnect(this._observer);\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = DocumentProxy.readyState(this._document);\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = MutationRecordProxy.addedNodes(mutations[i]);\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!Element>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!Element>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLElement'];\nexport const prototype = constructor['prototype'];\n\nexport const descriptors = {\n  innerHTML: getDescriptor(prototype, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(prototype, 'insertAdjacentElement'),\n};\n\nexport const proxy = {};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {prototype as HTMLElementProto} from '../Environment/HTMLElement.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = DocumentProxy.createElement(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = HTMLElementProto;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import {\n  descriptors as DocumentDesc,\n  prototype as DocumentProto,\n  proxy as DocumentProxy,\n} from '../Environment/Document.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(DocumentProto, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (DocumentProxy.createElement(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(DocumentProto, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = DocumentProxy.importNode(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(DocumentProto, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (DocumentProxy.createElementNS(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, DocumentProto, {\n    prepend: (DocumentDesc.prepend || {}).value,\n    append: (DocumentDesc.append || {}).value,\n  });\n};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {\n  descriptors as NodeDesc,\n  prototype as NodeProto,\n  proxy as NodeProxy,\n} from '../Environment/Node.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(NodeProto, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(node));\n        const nativeResult = NodeProxy.insertBefore(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.insertBefore(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(node));\n        const nativeResult = NodeProxy.appendChild(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.appendChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = NodeProxy.cloneNode(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.removeChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(nodeToInsert));\n        const nativeResult = NodeProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = NodeProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (NodeProxy.firstChild(this)) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = NodeProxy.childNodes(this);\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (NodeDesc.textContent && NodeDesc.textContent.get) {\n    patch_textContent(NodeProto, NodeDesc.textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          const childNodes = NodeProxy.childNodes(this);\n          for (let i = 0; i < childNodes.length; i++) {\n            parts.push(childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          let child;\n          while (child = NodeProxy.firstChild(this)) {\n            NodeProxy.removeChild(this, child);\n          }\n          NodeProxy.appendChild(this, DocumentProxy.createTextNode(document, assignedValue));\n        },\n      });\n    });\n  }\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLTemplateElement'];\nexport const prototype = constructor ? constructor['prototype'] : undefined;\n\nexport const descriptors = !prototype ? {} : {\n  content: getDescriptor(prototype, 'content'),\n};\n\nconst contentGetter = getter(descriptors.content, function() { return this.content; });\n\nexport const proxy = {\n  content: node => contentGetter.call(node),\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {\n  descriptors as ElementDesc,\n  prototype as ElementProto,\n  proxy as ElementProxy,\n} from '../Environment/Element.js';\nimport {\n  descriptors as HTMLElementDesc,\n  prototype as HTMLElementProto,\n} from '../Environment/HTMLElement.js';\nimport {proxy as HTMLTemplateElementProxy} from '../Environment/HTMLTemplateElement.js';\nimport {proxy as NodeProxy} from '../Environment/Node.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (ElementDesc.attachShadow) {\n    Utilities.setPropertyUnchecked(ElementProto, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = ElementProxy.attachShadow(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (ElementDesc.innerHTML && ElementDesc.innerHTML.get) {\n    patch_innerHTML(ElementProto, ElementDesc.innerHTML);\n  } else if (HTMLElementDesc.innerHTML && HTMLElementDesc.innerHTML.get) {\n    patch_innerHTML(HTMLElementProto, HTMLElementDesc.innerHTML);\n  } else {\n    // In this case, `innerHTML` has no exposed getter but still exists. Rather\n    // than using the environment proxy, we have to get and set it directly.\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = DocumentProxy.createElement(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return NodeProxy.cloneNode(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content =\n            (ElementProxy.localName(this) === 'template')\n            ? HTMLTemplateElementProxy.content(/** @type {!HTMLTemplateElement} */ (this))\n            : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (NodeProxy.childNodes(content).length > 0) {\n            NodeProxy.removeChild(content, content.childNodes[0]);\n          }\n          while (NodeProxy.childNodes(rawDiv).length > 0) {\n            NodeProxy.appendChild(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(ElementProto, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.setAttribute(this, name, newValue);\n      }\n\n      const oldValue = ElementProxy.getAttribute(this, name);\n      ElementProxy.setAttribute(this, name, newValue);\n      newValue = ElementProxy.getAttribute(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(ElementProto, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.setAttributeNS(this, namespace, name, newValue);\n      }\n\n      const oldValue = ElementProxy.getAttributeNS(this, namespace, name);\n      ElementProxy.setAttributeNS(this, namespace, name, newValue);\n      newValue = ElementProxy.getAttributeNS(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(ElementProto, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.removeAttribute(this, name);\n      }\n\n      const oldValue = ElementProxy.getAttribute(this, name);\n      ElementProxy.removeAttribute(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(ElementProto, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.removeAttributeNS(this, namespace, name);\n      }\n\n      const oldValue = ElementProxy.getAttributeNS(this, namespace, name);\n      ElementProxy.removeAttributeNS(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = ElementProxy.getAttributeNS(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (HTMLElementDesc.insertAdjacentElement && HTMLElementDesc.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(HTMLElementProto, HTMLElementDesc.insertAdjacentElement.value);\n  } else if (ElementDesc.insertAdjacentElement && ElementDesc.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(ElementProto, ElementDesc.insertAdjacentElement.value);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, ElementProto, {\n    prepend: (ElementDesc.prepend || {}).value,\n    append: (ElementDesc.append || {}).value,\n  });\n\n  PatchChildNode(internals, ElementProto, {\n    before: (ElementDesc.before || {}).value,\n    after: (ElementDesc.after || {}).value,\n    replaceWith: (ElementDesc.replaceWith || {}).value,\n    remove: (ElementDesc.remove || {}).value,\n  });\n};\n"]}