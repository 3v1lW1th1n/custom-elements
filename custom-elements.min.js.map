{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Environment/Utilities.js","src/Environment/Document.js","src/Environment/Element.js","src/Environment/EventTarget.js","src/CustomElementInternals.js","src/Environment/HTMLLinkElement.js","src/Environment/Node.js","src/Utilities.js","src/CustomElementState.js","src/Environment/MutationObserver.js","src/Environment/MutationRecord.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Environment/HTMLElement.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Environment/DocumentFragment.js","src/Patch/Node.js","src/Environment/HTMLTemplateElement.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js","src/Patch/DocumentFragment.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","getDescriptor$$module$$src$Environment$Utilities","o","p","Object","getOwnPropertyDescriptor","getter$$module$$src$Environment$Utilities","descriptor","fallback","get","method$$module$$src$Environment$Utilities","value","constructor","window","proto","append","getDescriptor","prepend","createElementMethod","method","createElement","createElementNSMethod","createElementNS","createTextNodeMethod","createTextNode","importNodeMethod","importNode","readyStateGetter","getter","readyState","after","attachShadow","before","innerHTML","insertAdjacentElement","remove","replaceWith","attachShadowMethod","descriptors$$module$$src$Environment$Element.attachShadow","getAttributeMethod","getAttribute","getAttributeNSMethod","getAttributeNS","localNameGetter","localName","prototype","removeAttributeMethod","removeAttribute","removeAttributeNSMethod","removeAttributeNS","setAttributeMethod","setAttribute","setAttributeNSMethod","setAttributeNS","undefined","addEventListenerMethod","addEventListener","descriptors","node","callback","call","type","options","importGetter","import","textContent","appendChildMethod","appendChild","childNodesGetter","childNodes","cloneNodeMethod","cloneNode","firstChildGetter","firstChild","insertBeforeMethod","insertBefore","isConnectedGetter","isConnected","nextSiblingGetter","nextSibling","nodeTypeGetter","nodeType","ownerDocumentGetter","ownerDocument","parentNodeGetter","parentNode","removeChildMethod","removeChild","replaceChildMethod","replaceChild","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","nativeValue","current","__CE_isImportDocument","Document","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","visitedImports","Node","ELEMENT_NODE","element","name","add","child","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","patch","__CE_patched","i","length","connectTree","elements","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","upgrade","gatherElements","__CE_hasRegistry","proxy$$module$$src$Environment$EventTarget.addEventListener","__CE_documentLoadHandled","clonedVisitedImports","delete","localNameToDefinition","constructionStack","result","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","oldValue","newValue","namespace","indexOf","disconnectMethod","disconnect","observeMethod","observe","addedNodesGetter","addedNodes","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","_handleMutations","bind","childList","subtree","mutations","j","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_pendingDefinitions","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","shift","pendingUpgradableElements","deferred","whenDefined","reject","prior","some","d","polyfillWrapFlushCallback","outer","inner","flush","$jscompDefaultExport$$module$$src$Patch$HTMLElement","HTMLElement","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","appendPrependPatch","builtInMethod","flattenedNodes","connectedElements","nodes","Element","DocumentFragment","apply","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","NS_HTML","descriptors$$module$$src$Environment$Document.prepend","descriptors$$module$$src$Environment$Document.append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodesLength","Array","refNode","insertedNodes","slice","nativeResult","nodeWasConnected","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","descriptors$$module$$src$Environment$Node.textContent","descriptors$$module$$src$Environment$Node.textContent.get","parts","join","contentGetter","content","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","descriptors$$module$$src$Environment$Element.before","descriptors$$module$$src$Environment$Element.after","descriptors$$module$$src$Environment$Element.replaceWith","descriptors$$module$$src$Environment$Element.remove","beforeAfterPatch","wasConnected","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","init","descriptors$$module$$src$Environment$Element.innerHTML","descriptors$$module$$src$Environment$Element.innerHTML.get","descriptors$$module$$src$Environment$HTMLElement.innerHTML","descriptors$$module$$src$Environment$HTMLElement.innerHTML.get","rawDiv","descriptors$$module$$src$Environment$HTMLElement.insertAdjacentElement","descriptors$$module$$src$Environment$HTMLElement.insertAdjacentElement.value","descriptors$$module$$src$Environment$Element.insertAdjacentElement","descriptors$$module$$src$Environment$Element.insertAdjacentElement.value","console","warn","descriptors$$module$$src$Environment$Element.prepend","descriptors$$module$$src$Environment$Element.append","priorCustomElements","descriptors$$module$$src$Environment$DocumentFragment.prepend","descriptors$$module$$src$Environment$DocumentFragment.append","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","export const getDescriptor = (o, p) => Object.getOwnPropertyDescriptor(o, p);\nexport const getter = (descriptor, fallback) => descriptor && descriptor.get ? descriptor.get : fallback;\nexport const method = descriptor => descriptor && descriptor.value;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Document'];\nexport const proto = constructor['prototype'];\n\nexport const descriptors = {\n  append: getDescriptor(proto, 'append'),\n  createElement: getDescriptor(proto, 'createElement'),\n  createElementNS: getDescriptor(proto, 'createElementNS'),\n  createTextNode: getDescriptor(proto, 'createTextNode'),\n  importNode: getDescriptor(proto, 'importNode'),\n  prepend: getDescriptor(proto, 'prepend'),\n  readyState: getDescriptor(proto, 'readyState'),\n};\n\n/** @type {function(this: Document, !string): !HTMLElement} */\nconst createElementMethod = method(descriptors.createElement);\n/** @type {function(this: Document, ?string, !string): !Element} */\nconst createElementNSMethod = method(descriptors.createElementNS);\n/** @type {function(this: Document, !string): !Text} */\nconst createTextNodeMethod = method(descriptors.createTextNode);\n/** @type {function(this: Document, !Node, boolean=): !Node} */\nconst importNodeMethod = method(descriptors.importNode);\n/** @type {function(this: Document): (!string|undefined)} */\nconst readyStateGetter = getter(descriptors.readyState, function() { return this.readyState; });\n\n/**\n * @type {{\n *   createElement: function(!Document, !string): !Element,\n *   createElementNS: function(!Document, ?string, !string): !Element,\n *   createTextNode: function(!Document, !string): !Text,\n *   importNode: function(!Document, !Node, boolean=): !Node,\n *   readyState: function(!Document): (!string|undefined),\n * }}\n */\nexport const proxy = {\n  createElement: (doc, localName) => createElementMethod.call(doc, localName),\n  createElementNS: (doc, namespace, qualifiedName) => createElementNSMethod.call(doc, namespace, qualifiedName),\n  createTextNode: (doc, localName) => createTextNodeMethod.call(doc, localName),\n  importNode: (doc, node, deep) => importNodeMethod.call(doc, node, deep),\n  readyState: doc => readyStateGetter.call(doc),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Element'];\nexport const proto = constructor['prototype'];\n\nexport const descriptors = {\n  after: getDescriptor(proto, 'after'),\n  append: getDescriptor(proto, 'append'),\n  attachShadow: getDescriptor(proto, 'attachShadow'),\n  before: getDescriptor(proto, 'before'),\n  getAttribute: getDescriptor(proto, 'getAttribute'),\n  getAttributeNS: getDescriptor(proto, 'getAttributeNS'),\n  innerHTML: getDescriptor(proto, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(proto, 'insertAdjacentElement'),\n  localName: getDescriptor(proto, 'localName'),\n  prepend: getDescriptor(proto, 'prepend'),\n  remove: getDescriptor(proto, 'remove'),\n  removeAttribute: getDescriptor(proto, 'removeAttribute'),\n  removeAttributeNS: getDescriptor(proto, 'removeAttributeNS'),\n  replaceWith: getDescriptor(proto, 'replaceWith'),\n  setAttribute: getDescriptor(proto, 'setAttribute'),\n  setAttributeNS: getDescriptor(proto, 'setAttributeNS'),\n};\n\n/** @type {function(this: Element, !{mode: !string}): ShadowRoot} */\nconst attachShadowMethod = method(descriptors.attachShadow);\n/** @type {function(this: Element, !string): ?string} */\nconst getAttributeMethod = method(descriptors.getAttribute);\n/** @type {function(this: Element, ?string, !string): ?string} */\nconst getAttributeNSMethod = method(descriptors.getAttributeNS);\n/** @type {function(this: Element): !string} */\nconst localNameGetter = getter(\n  descriptors.localName || /* Edge / IE11 */ getDescriptor(window['Node'].prototype, 'localName'),\n  function() { return this.localName; });\n/** @type {function(this: Element, !string)} */\nconst removeAttributeMethod = method(descriptors.removeAttribute);\n/** @type {function(this: Element, ?string, !string)} */\nconst removeAttributeNSMethod = method(descriptors.removeAttributeNS);\n/** @type {function(this: Element, !string, !string): ?string} */\nconst setAttributeMethod = method(descriptors.setAttribute);\n/** @type {function(this: Element, ?string, !string, !string): ?string} */\nconst setAttributeNSMethod = method(descriptors.setAttributeNS);\n\n/**\n * @type {{\n *   attachShadow: function(!Element, !{mode: !string}): ShadowRoot,\n *   getAttribute: function(!Element, !string): ?string,\n *   getAttributeNS: function(!Element, ?string, !string): ?string,\n *   localName: function(!Element): !string,\n *   removeAttribute: function(!Element, !string),\n *   removeAttributeNS: function(!Element, ?string, !string),\n *   setAttribute: function(!Element, !string, !string): ?string,\n *   setAttributeNS: function(!Element, ?string, !string, !string): ?string,\n * }}\n */\nexport const proxy = {\n  attachShadow: (node, options) => attachShadowMethod.call(node, options),\n  getAttribute: (node, name) => getAttributeMethod.call(node, name),\n  getAttributeNS: (node, ns, name) => getAttributeNSMethod.call(node, ns, name),\n  localName: node => localNameGetter.call(node),\n  removeAttribute: (node, name) => removeAttributeMethod.call(node, name),\n  removeAttributeNS: (node, ns, name) => removeAttributeNSMethod.call(node, ns, name),\n  setAttribute: (node, name, value) => setAttributeMethod.call(node, name, value),\n  setAttributeNS: (node, ns, name, value) => setAttributeNSMethod.call(node, ns, name, value),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['EventTarget'];\nexport const proto = constructor ? constructor['prototype'] : undefined;\n\nexport const descriptors = !proto ? {} : {\n  addEventListener: getDescriptor(proto, 'addEventListener'),\n};\n\n/** @type {function(this: EventTarget, !string, ?Function, AddEventListenerOptions=)} */\nconst addEventListenerMethod =\n  method(descriptors.addEventListener) ||\n  // IE11\n  method(getDescriptor(window['Node']['prototype'], 'addEventListener'));\n\n/**\n * @type {{\n *   addEventListener: function(!EventTarget, !string, ?Function, AddEventListenerOptions=),\n * }}\n */\nexport const proxy = {\n  addEventListener: (node, type, callback, options) => addEventListenerMethod.call(node, type, callback, options),\n};\n","import {constructor as DocumentCtor, proxy as DocumentProxy} from './Environment/Document.js';\nimport {proxy as ElementProxy} from './Environment/Element.js';\nimport {proxy as EventTargetProxy} from './Environment/EventTarget.js';\nimport {proxy as HTMLLinkElementProxy} from './Environment/HTMLLinkElement.js';\nimport {constructor as NodeCtor} from './Environment/Node.js';\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (ElementProxy.localName(element) === 'link' &&\n          ElementProxy.getAttribute(element, 'rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (HTMLLinkElementProxy.import(element));\n        const readyState = importNode instanceof DocumentCtor\n          // Native HTML Imports.\n          ? DocumentProxy.readyState(/** @type {!Document} */ (importNode))\n          // HTML Imports polyfill.\n          : (importNode instanceof NodeCtor ? importNode.readyState : undefined);\n\n        if (readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          EventTargetProxy.addEventListener(element, 'load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            clonedVisitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports: clonedVisitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const localName = ElementProxy.localName(element)\n    const definition = this.localNameToDefinition(localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = ElementProxy.getAttribute(element, name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLLinkElement'];\nexport const proto = constructor ? constructor['prototype'] : undefined;\n\nexport const descriptors = {\n  import: getDescriptor(proto, 'import'),\n};\n\n/** @type {function(this: HTMLLinkElement): ?Document} */\nconst importGetter = getter(descriptors.import, function() { return this.import; });\n\n/**\n * @type {{\n *   import: function(!HTMLLinkElement): ?Document,\n * }}\n */\nexport const proxy = {\n  import: node => importGetter.call(node),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['Node'];\nexport const proto = constructor['prototype'];\n\nexport const descriptors = {\n  appendChild: getDescriptor(proto, 'appendChild'),\n  childNodes: getDescriptor(proto, 'childNodes'),\n  cloneNode: getDescriptor(proto, 'cloneNode'),\n  firstChild: getDescriptor(proto, 'firstChild'),\n  insertBefore: getDescriptor(proto, 'insertBefore'),\n  isConnected: getDescriptor(proto, 'isConnected'),\n  nextSibling: getDescriptor(proto, 'nextSibling'),\n  nodeType: getDescriptor(proto, 'nodeType'),\n  ownerDocument: getDescriptor(proto, 'ownerDocument'),\n  parentNode: getDescriptor(proto, 'parentNode'),\n  removeChild: getDescriptor(proto, 'removeChild'),\n  replaceChild: getDescriptor(proto, 'replaceChild'),\n  textContent: getDescriptor(proto, 'textContent'),\n};\n\n/** @type {function(this: Node, !Node): !Node} */\nconst appendChildMethod = method(descriptors.appendChild);\n/** @type {function(this: Node): !NodeList} */\nconst childNodesGetter = getter(descriptors.childNodes, function() { return this.childNodes; });\n/** @type {function(this: Node, boolean=): !Node} */\nconst cloneNodeMethod = method(descriptors.cloneNode);\n/** @type {function(this: Node): ?Node} */\nconst firstChildGetter = getter(descriptors.firstChild, function() { return this.firstChild; });\n/** @type {function(this: Node, !Node, ?Node): !Node} */\nconst insertBeforeMethod = method(descriptors.insertBefore);\n/** @type {function(this: Node): boolean} */\nconst isConnectedGetter = getter(descriptors.isConnected, function() { return this.isConnected; });\n/** @type {function(this: Node): ?Node} */\nconst nextSiblingGetter = getter(descriptors.nextSibling, function() { return this.nextSibling; });\n/** @type {function(this: Node): number} */\nconst nodeTypeGetter = getter(descriptors.nodeType, function() { return this.nodeType; });\n/** @type {function(this: Node): ?Document} */\nconst ownerDocumentGetter = getter(descriptors.ownerDocument, function() { return this.ownerDocument; });\n/** @type {function(this: Node): ?Node} */\nconst parentNodeGetter = getter(descriptors.parentNode, function() { return this.parentNode; });\n/** @type {function(this: Node, !Node): !Node} */\nconst removeChildMethod = method(descriptors.removeChild);\n/** @type {function(this: Node, !Node, !Node): !Node} */\nconst replaceChildMethod = method(descriptors.replaceChild);\n\n/**\n * @type {{\n *   appendChild: function(!Node, !Node): !Node,\n *   childNodes: function(!Node): !NodeList,\n *   cloneNode: function(!Node, boolean=): !Node,\n *   firstChild: function(!Node): ?Node,\n *   insertBefore: function(!Node, !Node, ?Node): !Node,\n *   isConnected: function(!Node): boolean,\n *   nextSibling: function(!Node): ?Node,\n *   nodeType: function(!Node): number,\n *   ownerDocument: function(!Node): ?Document,\n *   parentNode: function(!Node): ?Node,\n *   removeChild: function(!Node, !Node): !Node,\n *   replaceChild: function(!Node, !Node, !Node): !Node,\n * }}\n */\nexport const proxy = {\n  appendChild: (node, deep) => appendChildMethod.call(node, deep),\n  childNodes: node => childNodesGetter.call(node),\n  cloneNode: (node, deep) => cloneNodeMethod.call(node, deep),\n  firstChild: node => firstChildGetter.call(node),\n  insertBefore: (node, newChild, refChild) => insertBeforeMethod.call(node, newChild, refChild),\n  isConnected: node => isConnectedGetter.call(node),\n  nextSibling: node => nextSiblingGetter.call(node),\n  nodeType: node => nodeTypeGetter.call(node),\n  ownerDocument: node => ownerDocumentGetter.call(node),\n  parentNode: node => parentNodeGetter.call(node),\n  removeChild: (node, deep) => removeChildMethod.call(node, deep),\n  replaceChild: (node, newChild, oldChild) => replaceChildMethod.call(node, newChild, oldChild),\n};\n","import {proxy as ElementProxy} from './Environment/Element.js';\nimport {proxy as NodeProxy} from './Environment/Node.js';\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = NodeProxy.isConnected(node);\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = NodeProxy.parentNode(current) || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !NodeProxy.nextSibling(node)) {\n    node = NodeProxy.parentNode(node);\n  }\n  return (!node || node === root) ? null : NodeProxy.nextSibling(node);\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return NodeProxy.firstChild(start) || nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (NodeProxy.nodeType(node) === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = ElementProxy.localName(element);\n      if (localName === 'link' && ElementProxy.getAttribute(element, 'rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = NodeProxy.firstChild(importNode); child; child = NodeProxy.nextSibling(child)) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = NodeProxy.firstChild(shadowRoot); child; child = NodeProxy.nextSibling(child)) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['MutationObserver'];\nexport const proto = constructor['prototype'];\n\nexport const descriptors = {\n  disconnect: getDescriptor(proto, 'disconnect'),\n  observe: getDescriptor(proto, 'observe'),\n};\n\n/** @type {function(this: MutationObserver)} */\nconst disconnectMethod = method(descriptors.disconnect);\n/** @type {function(this: MutationObserver, !Node, !MutationObserverInit=)} */\nconst observeMethod = method(descriptors.observe);\n\n/**\n * @type {{\n *   disconnect: function(!MutationObserver),\n *   observe: function(!MutationObserver, !Node, !MutationObserverInit=),\n * }}\n */\nexport const proxy = {\n  disconnect: mutationObserver => disconnectMethod.call(mutationObserver),\n  observe: (mutationObserver, target, options) => observeMethod.call(mutationObserver, target, options),\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['MutationRecord'];\nexport const proto = constructor['prototype'];\n\nexport const descriptors = {\n  addedNodes: getDescriptor(proto, 'addedNodes'),\n};\n\n/** @type {function(this: MutationRecord): (!NodeList|undefined)} */\nconst addedNodesGetter = getter(descriptors.addedNodes, function() { return this.addedNodes; });\n\n/**\n * @type {{\n *   addedNodes: function(!MutationRecord): (!NodeList|undefined),\n * }}\n */\nexport const proxy = {\n  addedNodes: node => addedNodesGetter.call(node),\n};\n","import {proxy as DocumentProxy} from './Environment/Document.js';\nimport {constructor as MutationObserverCtor, proxy as MutationObserverProxy} from './Environment/MutationObserver.js';\nimport {proxy as MutationRecordProxy} from './Environment/MutationRecord.js';\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (DocumentProxy.readyState(this._document) === 'loading') {\n      this._observer = new MutationObserverCtor(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      MutationObserverProxy.observe(this._observer, this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      MutationObserverProxy.disconnect(this._observer);\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = DocumentProxy.readyState(this._document);\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = MutationRecordProxy.addedNodes(mutations[i]);\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\nimport { proxy as ElementProxy } from './Environment/Element.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!Element>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!Element>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = ElementProxy.localName(element);\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLElement'];\nexport const proto = constructor['prototype'];\n\nexport const descriptors = {\n  innerHTML: getDescriptor(proto, 'innerHTML'),\n  insertAdjacentElement: getDescriptor(proto, 'insertAdjacentElement'),\n};\n\nexport const proxy = {};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {proto as HTMLElementProto} from '../Environment/HTMLElement.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = DocumentProxy.createElement(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = HTMLElementProto;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport {proxy as NodeProxy} from '../../Environment/Node.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = NodeProxy.firstChild(node); child; child = NodeProxy.nextSibling(child)) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","import {\n  descriptors as DocumentDesc,\n  proto as DocumentProto,\n  proxy as DocumentProxy,\n} from '../Environment/Document.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(DocumentProto, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (DocumentProxy.createElement(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(DocumentProto, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = DocumentProxy.importNode(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(DocumentProto, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (DocumentProxy.createElementNS(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, DocumentProto, {\n    prepend: (DocumentDesc.prepend || {}).value,\n    append: (DocumentDesc.append || {}).value,\n  });\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['DocumentFragment'];\nexport const proto = constructor['prototype'];\n\nexport const descriptors = {\n  append: getDescriptor(proto, 'append'),\n  prepend: getDescriptor(proto, 'prepend'),\n};\n\n/** @type {function(this: DocumentFragment, ...(!Node|!string))} */\nconst appendMethod = method(descriptors.append);\n/** @type {function(this: DocumentFragment, ...(!Node|!string))} */\nconst prependMethod = method(descriptors.prepend);\n\n/**\n * @type {{\n *   append: function(!DocumentFragment, ...(!Node|!string)),\n *   prepend: function(!DocumentFragment, ...(!Node|!string)),\n * }}\n */\nexport const proxy = {\n  append: (fragment, ...nodes) => appendMethod.call(fragment, ...nodes),\n  prepend: (fragment, ...nodes) => prependMethod.call(fragment, ...nodes),\n};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {\n  descriptors as NodeDesc,\n  proto as NodeProto,\n  proxy as NodeProxy,\n} from '../Environment/Node.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(NodeProto, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(node));\n        const nativeResult = NodeProxy.insertBefore(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.insertBefore(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(node));\n        const nativeResult = NodeProxy.appendChild(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.appendChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = NodeProxy.cloneNode(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!NodeProxy.ownerDocument(this).__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = NodeProxy.removeChild(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(NodeProto, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(NodeProxy.childNodes(nodeToInsert));\n        const nativeResult = NodeProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = NodeProxy.replaceChild(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (NodeProxy.nodeType(this) === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (NodeProxy.firstChild(this)) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = NodeProxy.childNodes(this);\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (NodeDesc.textContent && NodeDesc.textContent.get) {\n    patch_textContent(NodeProto, NodeDesc.textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          const childNodes = NodeProxy.childNodes(this);\n          for (let i = 0; i < childNodes.length; i++) {\n            parts.push(childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          let child;\n          while (child = NodeProxy.firstChild(this)) {\n            NodeProxy.removeChild(this, child);\n          }\n          NodeProxy.appendChild(this, DocumentProxy.createTextNode(document, assignedValue));\n        },\n      });\n    });\n  }\n};\n","import {getDescriptor, getter, method} from \"./Utilities.js\";\n\nexport const constructor = window['HTMLTemplateElement'];\nexport const proto = constructor ? constructor['prototype'] : undefined;\n\nexport const descriptors = !proto ? {} : {\n  content: getDescriptor(proto, 'content'),\n};\n\n/** @type {function(this: HTMLTemplateElement): !DocumentFragment} */\nconst contentGetter = getter(descriptors.content, function() { return this.content; });\n\n/**\n * @type {{\n *   content: function(!HTMLTemplateElement): !DocumentFragment,\n * }}\n */\nexport const proxy = {\n  content: node => contentGetter.call(node),\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport {proxy as NodeProxy} from '../../Environment/Node.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = NodeProxy.firstChild(node); child; child = NodeProxy.nextSibling(child)) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node>}\n         */\n        const flattenedNodes = [];\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n\n        for (var i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements.push(node);\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = NodeProxy.firstChild(node); child; child = NodeProxy.nextSibling(child)) {\n              flattenedNodes.push(child);\n            }\n          } else {\n            flattenedNodes.push(node);\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0; i < connectedElements.length; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0; i < flattenedNodes.length; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n","import {proxy as DocumentProxy} from '../Environment/Document.js';\nimport {\n  descriptors as ElementDesc,\n  proto as ElementProto,\n  proxy as ElementProxy,\n} from '../Environment/Element.js';\nimport {\n  descriptors as HTMLElementDesc,\n  proto as HTMLElementProto,\n} from '../Environment/HTMLElement.js';\nimport {proxy as HTMLTemplateElementProxy} from '../Environment/HTMLTemplateElement.js';\nimport {proxy as NodeProxy} from '../Environment/Node.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (ElementDesc.attachShadow) {\n    Utilities.setPropertyUnchecked(ElementProto, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = ElementProxy.attachShadow(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!NodeProxy.ownerDocument(this).__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (ElementDesc.innerHTML && ElementDesc.innerHTML.get) {\n    patch_innerHTML(ElementProto, ElementDesc.innerHTML);\n  } else if (HTMLElementDesc.innerHTML && HTMLElementDesc.innerHTML.get) {\n    patch_innerHTML(HTMLElementProto, HTMLElementDesc.innerHTML);\n  } else {\n    // In this case, `innerHTML` has no exposed getter but still exists. Rather\n    // than using the environment proxy, we have to get and set it directly.\n\n    const rawDiv = /** @type {HTMLDivElement} */ (DocumentProxy.createElement(document, 'div'));\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          const clone = /** @type {Element} */ (NodeProxy.cloneNode(this, true))\n          return clone.innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content =\n            (ElementProxy.localName(this) === 'template')\n            ? HTMLTemplateElementProxy.content(/** @type {!HTMLTemplateElement} */ (this))\n            : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (NodeProxy.childNodes(content).length > 0) {\n            NodeProxy.removeChild(content, content.childNodes[0]);\n          }\n          while (NodeProxy.childNodes(rawDiv).length > 0) {\n            NodeProxy.appendChild(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(ElementProto, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.setAttribute(this, name, newValue);\n      }\n\n      const before = ElementProxy.getAttribute(this, name);\n      ElementProxy.setAttribute(this, name, newValue);\n      const after = ElementProxy.getAttribute(this, name);\n      internals.attributeChangedCallback(this, name, before, after, null);\n    });\n\n  Utilities.setPropertyUnchecked(ElementProto, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.setAttributeNS(this, namespace, name, newValue);\n      }\n\n      const before = ElementProxy.getAttributeNS(this, namespace, name);\n      ElementProxy.setAttributeNS(this, namespace, name, newValue);\n      const after = ElementProxy.getAttributeNS(this, namespace, name);\n      internals.attributeChangedCallback(this, name, before, after, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(ElementProto, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.removeAttribute(this, name);\n      }\n\n      const oldValue = ElementProxy.getAttribute(this, name);\n      ElementProxy.removeAttribute(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(ElementProto, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return ElementProxy.removeAttributeNS(this, namespace, name);\n      }\n\n      const oldValue = ElementProxy.getAttributeNS(this, namespace, name);\n      ElementProxy.removeAttributeNS(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = ElementProxy.getAttributeNS(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (HTMLElementDesc.insertAdjacentElement && HTMLElementDesc.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(HTMLElementProto, HTMLElementDesc.insertAdjacentElement.value);\n  } else if (ElementDesc.insertAdjacentElement && ElementDesc.insertAdjacentElement.value) {\n    patch_insertAdjacentElement(ElementProto, ElementDesc.insertAdjacentElement.value);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, ElementProto, {\n    prepend: (ElementDesc.prepend || {}).value,\n    append: (ElementDesc.append || {}).value,\n  });\n\n  PatchChildNode(internals, ElementProto, {\n    before: (ElementDesc.before || {}).value,\n    after: (ElementDesc.after || {}).value,\n    replaceWith: (ElementDesc.replaceWith || {}).value,\n    remove: (ElementDesc.remove || {}).value,\n  });\n};\n","import CustomElementInternals from '../CustomElementInternals.js';\nimport {\n  descriptors as DocumentFragmentDesc,\n  proto as DocumentFragmentProto,\n} from '../Environment/DocumentFragment.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragmentProto, {\n    prepend: (DocumentFragmentDesc.prepend || {}).value,\n    append: (DocumentFragmentDesc.append || {}).value,\n  });\n};\n"]}