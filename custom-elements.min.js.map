{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Utilities.js","src/CustomElementState.js","src/CustomElementInternals.js","src/Deferred.js","src/CustomElementRegistry.js","src/DocumentConstructionObserver.js","src/Patch/Native.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","localName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","isConnected","node","nativeValue","undefined","__CE_isImportDocument","Document","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","callback","visitedImports","ELEMENT_NODE","getAttribute","importNode","import","add","child","firstChild","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","name","value","module$$src$CustomElementState.default","CustomElementState","custom","failed","constructor","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","element","patch","__CE_patched","i","length","connectTree","elements","__CE_state","module$$src$CustomElementState.default.custom","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","gatherElements","readyState","__CE_hasRegistry","addEventListener","__CE_documentLoadHandled","delete","localNameToDefinition","get","constructionStack","result","Error","pop","e","module$$src$CustomElementState.default.failed","__CE_definition","attributeChangedCallback","observedAttributes","call","oldValue","newValue","namespace","indexOf","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","internals","_elementDefinitionIsRunning","_internals","_whenDefinedDeferred","_flushCallback","_flushScheduled","_pendingDeferred","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","Object","_doFlush","document","deferred","shift","whenDefined","reject","prior","window","defineProperty","flushCallback","DocumentConstructionObserver","doc","_document","_observer","MutationObserver","_handleMutations","bind","observe","childList","subtree","mutations","disconnect","addedNodes","j","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","Node_textContent","getOwnPropertyDescriptor","Element_attachShadow","Element","Element_innerHTML","Element_getAttribute","Element_setAttribute","setAttribute","Element_removeAttribute","removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$HTMLElement","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElement.call","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","prepend","apply","append","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","$jscompDefaultExport$$module$$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElementNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Document_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Document_append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","$jscompDefaultExport$$module$$src$Patch$Native.Node_insertBefore.call","nodeWasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_cloneNode.call","ownerDocument","$jscompDefaultExport$$module$$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","$jscompDefaultExport$$module$$src$Patch$Native.Node_replaceChild.call","nodeToInsertWasConnected","thisIsConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent.get","parts","textContent","join","createTextNode","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","$jscompDefaultExport$$module$$src$Patch$Native.Element_before","$jscompDefaultExport$$module$$src$Patch$Native.Element_after","wasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Element_replaceWith","$jscompDefaultExport$$module$$src$Patch$Native.Element_remove","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow.call","console","warn","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML.get","rawDiv","innerHTML","content","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttributeNS.call","where","insertedElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_insertAdjacentElement.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Element_append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  while (node && !(node.__CE_isImportDocument || node instanceof Document)) {\n    // TODO: Change this check from testing if the node is a DocumentFragment to\n    // testing `instanceof ShadowRoot` when shadydom exposes its implementation\n    // of ShadowRoot.\n    node = node.parentNode || (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? node.host : undefined);\n  }\n  return !!(node && (node.__CE_isImportDocument || node instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      callback(node);\n\n      if (node.localName === 'link' && node.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (node.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, node);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = node.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import * as Utilities from './Utilities';\nimport CEState from './CustomElementState';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      this.upgradeElement(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals';\nimport Deferred from './Deferred';\nimport * as Utilities from './Utilities';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * @private\n     * @type {!Function|undefined}\n     */\n    this._flushCallback = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushScheduled = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._pendingDeferred = [];\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    // If no flush is scheduled and no flush callback is defined, we can walk\n    // everything on this definition.\n    if (!this._flushScheduled && !this._flushCallback) {\n      this._internals.patchAndUpgradeTree(document);\n\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    } else {\n      this._pendingDeferred.push(localName);\n\n      // If we've already scheduled a flush, don't schedule a new one.\n      if (!this._flushScheduled) {\n        this._flushScheduled = true;\n        this._flushCallback(() => this._doFlush());\n      }\n    }\n  }\n\n  _doFlush() {\n    // If no new definitions were defined, don't attempt to flush.\n    if (this._flushScheduled === false) return;\n\n    this._flushScheduled = false;\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._pendingDeferred.length > 0) {\n      const localName = this._pendingDeferred.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nObject.defineProperty(CustomElementRegistry.prototype, 'polyfillFlushCallback', {\n  /**\n   * Setting `polyfillFlushCallback` to a function will set that function as the\n   * registry's 'flush callback'.\n   *\n   * If the flush callback is `undefined` (the default), calls to `define` cause\n   * synchronous full-document walks to find and upgrade elements and resolve\n   * any associated `whenDefined` promises immediately after the walk.\n   *\n   * If the flush callback is defined and the registry receives a call to\n   * `define`, the flush callback is called with a function that must be called\n   * to initiate the next flush. Particularly, no calls to `define` will trigger\n   * document walks to check for upgrades and no promises returned by\n   * `whenDefined` will be resolved until the next time the function given to\n   * the flush callback is called (or the flush callback is set back to\n   * `undefined`).\n   *\n   * ```javascript\n   * let doFlush = undefined;\n   * customElements.polyfillFlushCallback = function flushCallback(fn) {\n   *   doFlush = fn;\n   * };\n   *\n   * let promiseB = customElements.whenDefined('element-a');\n   * let promiseA = customElements.whenDefined('element-b');\n   *\n   * // These calls will not cause any 'element-a' or 'element-b' elements\n   * // already in the document to be upgraded and will not cause `promiseA` or\n   * // `promiseB` to be resolved. However, `flushCallback` was called and\n   * // `doFlush` is now a function.\n   * customElements.define('element-a', class extends HTMLElement {});\n   * customElements.define('element-b', class extends HTMLElement {});\n   *\n   * // This call will cause the document to be walked and any 'element-a' or\n   * // 'element-b' elements found (which are now defined) will be upgraded.\n   * // Also, `promiseA` and `promiseB` will be resolved.\n   * doFlush();\n   *\n   * let promiseC = customElements.whenDefined('element-c');\n   *\n   * // Once again 'element-c' elements in the document are not upgraded and\n   * // `promiseC` is not resolved.\n   * customElements.define('element-c', class extends HTMLElement {});\n   *\n   * // Setting the flush callback to `undefined` walks the document for\n   * // upgrades and resolves any pending `whenDefined` promises, if any calls\n   * // to `define` were made since the last flush.\n   * customElements.polyfillFlushCallback = undefined;\n   * ```\n   *\n   * @this {CustomElementRegistry}\n   * @param {!Function|undefined} flushCallback\n   */\n  set: function(flushCallback) {\n    if (flushCallback === undefined) {\n      this._doFlush();\n    }\n    this._flushCallback = flushCallback;\n  },\n\n  /**\n   * @this {CustomElementRegistry}\n   * @return {!Function|undefined}\n   */\n  get: function() {\n    return this._flushCallback;\n  },\n});\n","import CustomElementInternals from './CustomElementInternals';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this._observer.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport CEState from '../CustomElementState';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals';\nimport CustomElementRegistry from './CustomElementRegistry';\nimport DocumentConstructionObserver from './DocumentConstructionObserver';\n\nimport PatchHTMLElement from './Patch/HTMLElement';\nimport PatchDocument from './Patch/Document';\nimport PatchNode from './Patch/Node';\nimport PatchElement from './Patch/Element';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements || priorCustomElements['forcePolyfill']) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  if (priorCustomElements && priorCustomElements['polyfillFlushCallback'] instanceof Function) {\n    customElements['polyfillFlushCallback'] = priorCustomElements['polyfillFlushCallback'];\n  } else {\n    new DocumentConstructionObserver(internals, document);\n  }\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals';\nimport * as Utilities from '../../Utilities';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport * as Utilities from '../Utilities';\n\nimport PatchParentNode from './Interface/ParentNode';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport * as Utilities from '../Utilities';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals';\nimport * as Utilities from '../../Utilities';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport CEState from '../CustomElementState';\nimport * as Utilities from '../Utilities';\n\nimport PatchParentNode from './Interface/ParentNode';\nimport PatchChildNode from './Interface/ChildNode';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const removedNodes = Array.prototype.slice.apply(this.childNodes);\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          let content = this.localName === 'template' ? this.content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'remoteAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, namespace);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'insertAdjacentElement',\n    /**\n     * @this {Element}\n     * @param {string} where\n     * @param {!Element} element\n     * @return {?Element}\n     */\n    function(where, element) {\n      const wasConnected = Utilities.isConnected(element);\n      const insertedElement = /** @type {!Element} */\n        (Native.Element_insertAdjacentElement.call(this, where, element));\n\n      if (wasConnected) {\n        internals.disconnectTree(element);\n      }\n\n      if (Utilities.isConnected(insertedElement)) {\n        internals.connectTree(element);\n      }\n      return insertedElement;\n    });\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n"],"sourceRoot":"/source/"}